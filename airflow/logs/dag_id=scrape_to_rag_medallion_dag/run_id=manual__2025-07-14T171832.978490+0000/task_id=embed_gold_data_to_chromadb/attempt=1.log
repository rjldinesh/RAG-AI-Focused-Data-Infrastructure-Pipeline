{"timestamp":"2025-07-14T17:18:34.007602","level":"info","event":"DAG bundles loaded: dags-folder","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-07-14T17:18:34.009359","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/activefence.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-07-14T17:18:42.891880Z","level":"error","event":"/home/airflow/.local/lib/python3.12/site-packages/pyspark/bin/load-spark-env.sh: line 68: ps: command not found","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T17:18:45.545905Z","level":"info","event":":: loading settings :: url = jar:file:/home/airflow/.local/lib/python3.12/site-packages/pyspark/jars/ivy-2.5.1.jar!/org/apache/ivy/core/settings/ivysettings.xml","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T17:18:45.647467Z","level":"error","event":"Ivy Default Cache set to: /home/airflow/.ivy2/cache","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T17:18:45.648193Z","level":"error","event":"The jars for the packages stored in: /home/airflow/.ivy2/jars","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T17:18:45.651421Z","level":"error","event":"org.apache.hadoop#hadoop-aws added as a dependency","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T17:18:45.651940Z","level":"error","event":"com.amazonaws#aws-java-sdk-bundle added as a dependency","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T17:18:45.652395Z","level":"error","event":"org.apache.spark#spark-avro_2.12 added as a dependency","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T17:18:45.652834Z","level":"error","event":"io.delta#delta-spark_2.12 added as a dependency","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T17:18:45.653222Z","level":"error","event":":: resolving dependencies :: org.apache.spark#spark-submit-parent-235b9b66-43ce-4654-98b9-25ab71349327;1.0","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T17:18:45.653487Z","level":"error","event":"\tconfs: [default]","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T17:18:45.848372Z","level":"error","event":"\tfound org.apache.hadoop#hadoop-aws;3.3.4 in central","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T17:18:45.889199Z","level":"error","event":"\tfound org.wildfly.openssl#wildfly-openssl;1.0.7.Final in central","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T17:18:45.915126Z","level":"error","event":"\tfound com.amazonaws#aws-java-sdk-bundle;1.12.520 in central","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T17:18:45.956592Z","level":"error","event":"\tfound org.apache.spark#spark-avro_2.12;3.5.0 in central","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T17:18:45.984949Z","level":"error","event":"\tfound org.tukaani#xz;1.9 in central","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T17:18:46.002175Z","level":"error","event":"\tfound io.delta#delta-spark_2.12;3.1.0 in central","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T17:18:46.018811Z","level":"error","event":"\tfound io.delta#delta-storage;3.1.0 in central","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T17:18:46.033532Z","level":"error","event":"\tfound org.antlr#antlr4-runtime;4.9.3 in central","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T17:18:46.061920Z","level":"error","event":":: resolution report :: resolve 397ms :: artifacts dl 12ms","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T17:18:46.063217Z","level":"error","event":"\t:: modules in use:","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T17:18:46.063978Z","level":"error","event":"\tcom.amazonaws#aws-java-sdk-bundle;1.12.520 from central in [default]","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T17:18:46.064515Z","level":"error","event":"\tio.delta#delta-spark_2.12;3.1.0 from central in [default]","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T17:18:46.064900Z","level":"error","event":"\tio.delta#delta-storage;3.1.0 from central in [default]","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T17:18:46.065352Z","level":"error","event":"\torg.antlr#antlr4-runtime;4.9.3 from central in [default]","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T17:18:46.065731Z","level":"error","event":"\torg.apache.hadoop#hadoop-aws;3.3.4 from central in [default]","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T17:18:46.066086Z","level":"error","event":"\torg.apache.spark#spark-avro_2.12;3.5.0 from central in [default]","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T17:18:46.066507Z","level":"error","event":"\torg.tukaani#xz;1.9 from central in [default]","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T17:18:46.066906Z","level":"error","event":"\torg.wildfly.openssl#wildfly-openssl;1.0.7.Final from central in [default]","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T17:18:46.067617Z","level":"error","event":"\t:: evicted modules:","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T17:18:46.068002Z","level":"error","event":"\tcom.amazonaws#aws-java-sdk-bundle;1.12.262 by [com.amazonaws#aws-java-sdk-bundle;1.12.520] in [default]","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T17:18:46.068365Z","level":"error","event":"\t---------------------------------------------------------------------","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T17:18:46.068778Z","level":"error","event":"\t|                  |            modules            ||   artifacts   |","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T17:18:46.069135Z","level":"error","event":"\t|       conf       | number| search|dwnlded|evicted|| number|dwnlded|","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T17:18:46.069524Z","level":"error","event":"\t---------------------------------------------------------------------","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T17:18:46.070064Z","level":"error","event":"\t|      default     |   9   |   0   |   0   |   1   ||   8   |   0   |","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T17:18:46.070607Z","level":"error","event":"\t---------------------------------------------------------------------","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T17:18:46.073212Z","level":"error","event":":: retrieving :: org.apache.spark#spark-submit-parent-235b9b66-43ce-4654-98b9-25ab71349327","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T17:18:46.073855Z","level":"error","event":"\tconfs: [default]","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T17:18:46.081720Z","level":"error","event":"\t0 artifacts copied, 8 already retrieved (0kB/8ms)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T17:18:46.379958Z","level":"error","event":"25/07/14 17:18:46 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T17:18:46.633393Z","level":"error","event":"Setting default log level to \"WARN\".","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T17:18:46.634059Z","level":"error","event":"To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T17:18:49.657574","level":"info","event":"Anonymized telemetry enabled. See                     https://docs.trychroma.com/telemetry for more information.","logger":"chromadb.telemetry.product.posthog"}
{"timestamp":"2025-07-14T17:18:53.891842Z","level":"error","event":"25/07/14 17:18:53 WARN MetricsConfig: Cannot locate configuration: tried hadoop-metrics2-s3a-file-system.properties,hadoop-metrics2.properties","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T17:19:05.800926Z","level":"error","event":"\r[Stage 0:>                                                          (0 + 1) / 1]\r\r                                                                                \r25/07/14 17:19:05 WARN SparkStringUtils: Truncated the string representation of a plan since it was too large. This behavior can be adjusted by setting 'spark.sql.debug.maxToStringFields'.","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T17:19:19.024938","level":"error","event":"Error processing Delta table: Expected Embeddings to be non-empty list or numpy array, got [] in upsert.","logger":"unusual_prefix_0aab8e1abe4a8f324d874f9a30de87ad63865522_activefence"}
{"timestamp":"2025-07-14T17:19:19.025346","level":"error","event":"Task failed with exception","logger":"task","error_detail":[{"exc_type":"ValueError","exc_value":"Expected Embeddings to be non-empty list or numpy array, got [] in upsert.","exc_notes":[],"syntax_error":null,"is_cause":false,"frames":[{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/sdk/execution_time/task_runner.py","lineno":867,"name":"run"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/sdk/execution_time/task_runner.py","lineno":1159,"name":"_execute_task"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/sdk/bases/operator.py","lineno":397,"name":"wrapper"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/providers/standard/operators/python.py","lineno":216,"name":"execute"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/providers/standard/operators/python.py","lineno":239,"name":"execute_callable"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/sdk/execution_time/callback_runner.py","lineno":81,"name":"run"},{"filename":"/opt/airflow/dags/activefence.py","lineno":312,"name":"embed_gold_data"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/chromadb/api/models/Collection.py","lineno":365,"name":"upsert"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/chromadb/api/models/CollectionCommon.py","lineno":95,"name":"wrapper"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/chromadb/api/models/CollectionCommon.py","lineno":405,"name":"_validate_and_prepare_upsert_request"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/chromadb/api/types.py","lineno":271,"name":"normalize_insert_record_set"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/chromadb/api/types.py","lineno":248,"name":"normalize_base_record_set"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/chromadb/api/types.py","lineno":145,"name":"normalize_embeddings"}],"is_group":false,"exceptions":[]}]}
{"timestamp":"2025-07-14T17:19:19.664588Z","level":"error","event":"\r[Stage 1:>                                                          (0 + 1) / 1]\r\r[Stage 3:>                                                         (0 + 2) / 50]\r\r[Stage 3:==>                                                       (2 + 2) / 50]\r\r[Stage 3:=====>                                                    (5 + 2) / 50]\r\r[Stage 3:==========>                                               (9 + 2) / 50]\r\r[Stage 3:=============>                                           (12 + 2) / 50]\r\r[Stage 3:=================>                                       (15 + 3) / 50]\r\r[Stage 3:======================>                                  (20 + 2) / 50]\r\r[Stage 3:===========================>                             (24 + 2) / 50]\r\r[Stage 3:===============================>                         (28 + 2) / 50]\r\r[Stage 3:====================================>                    (32 + 2) / 50]\r\r[Stage 3:=========================================>               (36 + 2) / 50]\r\r[Stage 3:===============================================>         (42 + 2) / 50]\r\r[Stage 3:====================================================>    (46 + 2) / 50]\r\r                                                                                \r\r[Stage 5:>                                                         (0 + 2) / 50]\r\r[Stage 5:==>                                                       (2 + 2) / 50]\r\r[Stage 5:============>                                            (11 + 2) / 50]\r\r[Stage 5:=========================>                               (22 + 2) / 50]\r\r[Stage 5:======================================>                  (34 + 2) / 50]\r\r[Stage 5:=====================================================>   (47 + 2) / 50]\r\r                                                                                \r\r[Stage 9:>                                                          (0 + 1) / 1]\r\r                                                                                \r\r[Stage 11:=================================================>      (44 + 2) / 50]","chan":"stderr","logger":"task"}
