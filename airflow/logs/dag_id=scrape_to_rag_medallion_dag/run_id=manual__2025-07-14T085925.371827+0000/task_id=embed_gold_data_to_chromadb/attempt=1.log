{"timestamp":"2025-07-14T08:59:26.406112","level":"info","event":"DAG bundles loaded: dags-folder","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-07-14T08:59:26.406801","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/activefence.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-07-14T08:59:34.007569Z","level":"error","event":"/home/airflow/.local/lib/python3.12/site-packages/pyspark/bin/load-spark-env.sh: line 68: ps: command not found","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T08:59:35.622193Z","level":"info","event":":: loading settings :: url = jar:file:/home/airflow/.local/lib/python3.12/site-packages/pyspark/jars/ivy-2.5.1.jar!/org/apache/ivy/core/settings/ivysettings.xml","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T08:59:35.695497Z","level":"error","event":"Ivy Default Cache set to: /home/airflow/.ivy2/cache","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T08:59:35.696347Z","level":"error","event":"The jars for the packages stored in: /home/airflow/.ivy2/jars","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T08:59:35.701459Z","level":"error","event":"org.apache.hadoop#hadoop-aws added as a dependency","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T08:59:35.703562Z","level":"error","event":"com.amazonaws#aws-java-sdk-bundle added as a dependency","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T08:59:35.704408Z","level":"error","event":"org.apache.spark#spark-avro_2.12 added as a dependency","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T08:59:35.705078Z","level":"error","event":"io.delta#delta-spark_2.12 added as a dependency","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T08:59:35.705626Z","level":"error","event":":: resolving dependencies :: org.apache.spark#spark-submit-parent-d29d3c02-0c8d-4ee7-9dc2-4fe603b5bb11;1.0","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T08:59:35.706136Z","level":"error","event":"\tconfs: [default]","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T08:59:41.634888Z","level":"error","event":"\tfound org.apache.hadoop#hadoop-aws;3.3.4 in central","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T08:59:44.852832Z","level":"error","event":"\tfound org.wildfly.openssl#wildfly-openssl;1.0.7.Final in central","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T08:59:46.241157Z","level":"error","event":"\tfound com.amazonaws#aws-java-sdk-bundle;1.12.520 in central","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T08:59:49.671338Z","level":"error","event":"\tfound org.apache.spark#spark-avro_2.12;3.5.0 in central","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T08:59:50.042472Z","level":"error","event":"\tfound org.tukaani#xz;1.9 in central","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T08:59:50.130790Z","level":"error","event":"\tfound io.delta#delta-spark_2.12;3.1.0 in central","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T08:59:50.151419Z","level":"error","event":"\tfound io.delta#delta-storage;3.1.0 in central","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T08:59:50.167998Z","level":"error","event":"\tfound org.antlr#antlr4-runtime;4.9.3 in central","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T08:59:50.435339Z","level":"error","event":"downloading https://repo1.maven.org/maven2/org/apache/hadoop/hadoop-aws/3.3.4/hadoop-aws-3.3.4.jar ...","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T08:59:51.617161Z","level":"error","event":"\t[SUCCESSFUL ] org.apache.hadoop#hadoop-aws;3.3.4!hadoop-aws.jar (1434ms)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T08:59:51.795834Z","level":"error","event":"downloading https://repo1.maven.org/maven2/com/amazonaws/aws-java-sdk-bundle/1.12.520/aws-java-sdk-bundle-1.12.520.jar ...","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:33.916378Z","level":"error","event":"\t[SUCCESSFUL ] com.amazonaws#aws-java-sdk-bundle;1.12.520!aws-java-sdk-bundle.jar (462297ms)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:34.200584Z","level":"error","event":"downloading https://repo1.maven.org/maven2/org/apache/spark/spark-avro_2.12/3.5.0/spark-avro_2.12-3.5.0.jar ...","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:35.831839Z","level":"error","event":"\t[SUCCESSFUL ] org.apache.spark#spark-avro_2.12;3.5.0!spark-avro_2.12.jar (1912ms)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:36.022229Z","level":"error","event":"downloading https://repo1.maven.org/maven2/org/wildfly/openssl/wildfly-openssl/1.0.7.Final/wildfly-openssl-1.0.7.Final.jar ...","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:36.288084Z","level":"error","event":"\t[SUCCESSFUL ] org.wildfly.openssl#wildfly-openssl;1.0.7.Final!wildfly-openssl.jar (451ms)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:36.462873Z","level":"error","event":"downloading https://repo1.maven.org/maven2/org/tukaani/xz/1.9/xz-1.9.jar ...","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:37.682921Z","level":"error","event":"\t[SUCCESSFUL ] org.tukaani#xz;1.9!xz.jar (1393ms)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:37.687336Z","level":"error","event":":: resolution report :: resolve 14478ms :: artifacts dl 467506ms","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:37.688917Z","level":"error","event":"\t:: modules in use:","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:37.689493Z","level":"error","event":"\tcom.amazonaws#aws-java-sdk-bundle;1.12.520 from central in [default]","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:37.689893Z","level":"error","event":"\tio.delta#delta-spark_2.12;3.1.0 from central in [default]","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:37.690397Z","level":"error","event":"\tio.delta#delta-storage;3.1.0 from central in [default]","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:37.691024Z","level":"error","event":"\torg.antlr#antlr4-runtime;4.9.3 from central in [default]","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:37.691509Z","level":"error","event":"\torg.apache.hadoop#hadoop-aws;3.3.4 from central in [default]","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:37.691885Z","level":"error","event":"\torg.apache.spark#spark-avro_2.12;3.5.0 from central in [default]","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:37.692207Z","level":"error","event":"\torg.tukaani#xz;1.9 from central in [default]","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:37.692471Z","level":"error","event":"\torg.wildfly.openssl#wildfly-openssl;1.0.7.Final from central in [default]","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:37.692655Z","level":"error","event":"\t:: evicted modules:","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:37.692908Z","level":"error","event":"\tcom.amazonaws#aws-java-sdk-bundle;1.12.262 by [com.amazonaws#aws-java-sdk-bundle;1.12.520] in [default]","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:37.693142Z","level":"error","event":"\t---------------------------------------------------------------------","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:37.693337Z","level":"error","event":"\t|                  |            modules            ||   artifacts   |","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:37.693551Z","level":"error","event":"\t|       conf       | number| search|dwnlded|evicted|| number|dwnlded|","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:37.693785Z","level":"error","event":"\t---------------------------------------------------------------------","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:37.693971Z","level":"error","event":"\t|      default     |   9   |   5   |   5   |   1   ||   8   |   5   |","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:37.694502Z","level":"error","event":"\t---------------------------------------------------------------------","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:37.696328Z","level":"error","event":":: retrieving :: org.apache.spark#spark-submit-parent-d29d3c02-0c8d-4ee7-9dc2-4fe603b5bb11","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:37.697016Z","level":"error","event":"\tconfs: [default]","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:38.356481Z","level":"error","event":"\t5 artifacts copied, 3 already retrieved (331876kB/660ms)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:38.657825Z","level":"error","event":"25/07/14 09:07:38 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:38.883263Z","level":"error","event":"Setting default log level to \"WARN\".","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:38.884095Z","level":"error","event":"To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:42.877582Z","level":"error","event":"25/07/14 09:07:42 WARN MetricsConfig: Cannot locate configuration: tried hadoop-metrics2-s3a-file-system.properties,hadoop-metrics2.properties","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:43.874491Z","level":"error","event":"25/07/14 09:07:43 WARN DeltaLog: Failed to parse s3a://activefence-bucket/bbc_tech/silver/_delta_log/_last_checkpoint. This may happen if there was an error during read operation, or a file appears to be partial. Sleeping and trying again.","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:43.875177Z","level":"error","event":"java.nio.file.AccessDeniedException: s3a://activefence-bucket/bbc_tech/silver/_delta_log/_last_checkpoint: getFileStatus on s3a://activefence-bucket/bbc_tech/silver/_delta_log/_last_checkpoint: com.amazonaws.services.s3.model.AmazonS3Exception: Forbidden (Service: Amazon S3; Status Code: 403; Error Code: 403 Forbidden; Request ID: 185212F895726FAF; S3 Extended Request ID: dd9025bab4ad464b049177c95eb6ebf374d3b3fd1af9251148b658df7ac2e3e8; Proxy: null), S3 Extended Request ID: dd9025bab4ad464b049177c95eb6ebf374d3b3fd1af9251148b658df7ac2e3e8:403 Forbidden","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:43.875677Z","level":"error","event":"\tat org.apache.hadoop.fs.s3a.S3AUtils.translateException(S3AUtils.java:255)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:43.876372Z","level":"error","event":"\tat org.apache.hadoop.fs.s3a.S3AUtils.translateException(S3AUtils.java:175)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:43.876990Z","level":"error","event":"\tat org.apache.hadoop.fs.s3a.S3AFileSystem.s3GetFileStatus(S3AFileSystem.java:3796)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:43.877794Z","level":"error","event":"\tat org.apache.hadoop.fs.s3a.S3AFileSystem.innerGetFileStatus(S3AFileSystem.java:3688)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:43.878355Z","level":"error","event":"\tat org.apache.hadoop.fs.s3a.S3AFileSystem.extractOrFetchSimpleFileStatus(S3AFileSystem.java:5401)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:43.878960Z","level":"error","event":"\tat org.apache.hadoop.fs.s3a.S3AFileSystem.open(S3AFileSystem.java:1465)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:43.879545Z","level":"error","event":"\tat org.apache.hadoop.fs.s3a.S3AFileSystem.open(S3AFileSystem.java:1441)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:43.879923Z","level":"error","event":"\tat org.apache.hadoop.fs.FileSystem.open(FileSystem.java:976)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:43.880430Z","level":"error","event":"\tat io.delta.storage.HadoopFileSystemLogStore.read(HadoopFileSystemLogStore.java:46)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:43.880937Z","level":"error","event":"\tat org.apache.spark.sql.delta.storage.LogStoreAdaptor.read(LogStore.scala:412)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:43.881418Z","level":"error","event":"\tat org.apache.spark.sql.delta.storage.DelegatingLogStore.read(DelegatingLogStore.scala:96)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:43.881855Z","level":"error","event":"\tat org.apache.spark.sql.delta.Checkpoints.$anonfun$loadMetadataFromFile$1(Checkpoints.scala:361)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:43.882209Z","level":"error","event":"\tat org.apache.spark.sql.delta.metering.DeltaLogging.recordFrameProfile(DeltaLogging.scala:140)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:43.882557Z","level":"error","event":"\tat org.apache.spark.sql.delta.metering.DeltaLogging.recordFrameProfile$(DeltaLogging.scala:138)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:43.882870Z","level":"error","event":"\tat org.apache.spark.sql.delta.DeltaLog.recordFrameProfile(DeltaLog.scala:72)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:43.883163Z","level":"error","event":"\tat org.apache.spark.sql.delta.metering.DeltaLogging.$anonfun$recordDeltaOperationInternal$1(DeltaLogging.scala:133)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:43.883654Z","level":"error","event":"\tat com.databricks.spark.util.DatabricksLogging.recordOperation(DatabricksLogging.scala:128)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:43.884012Z","level":"error","event":"\tat com.databricks.spark.util.DatabricksLogging.recordOperation$(DatabricksLogging.scala:117)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:43.884514Z","level":"error","event":"\tat org.apache.spark.sql.delta.DeltaLog.recordOperation(DeltaLog.scala:72)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:43.885100Z","level":"error","event":"\tat org.apache.spark.sql.delta.metering.DeltaLogging.recordDeltaOperationInternal(DeltaLogging.scala:132)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:43.885579Z","level":"error","event":"\tat org.apache.spark.sql.delta.metering.DeltaLogging.recordDeltaOperation(DeltaLogging.scala:122)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:43.886059Z","level":"error","event":"\tat org.apache.spark.sql.delta.metering.DeltaLogging.recordDeltaOperation$(DeltaLogging.scala:112)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:43.886557Z","level":"error","event":"\tat org.apache.spark.sql.delta.DeltaLog.recordDeltaOperation(DeltaLog.scala:72)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:43.886993Z","level":"error","event":"\tat org.apache.spark.sql.delta.Checkpoints.loadMetadataFromFile(Checkpoints.scala:360)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:43.887341Z","level":"error","event":"\tat org.apache.spark.sql.delta.Checkpoints.readLastCheckpointFile(Checkpoints.scala:354)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:43.887742Z","level":"error","event":"\tat org.apache.spark.sql.delta.Checkpoints.readLastCheckpointFile$(Checkpoints.scala:353)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:43.888143Z","level":"error","event":"\tat org.apache.spark.sql.delta.DeltaLog.readLastCheckpointFile(DeltaLog.scala:72)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:43.888576Z","level":"error","event":"\tat org.apache.spark.sql.delta.SnapshotManagement.$anonfun$getSnapshotAtInit$1(SnapshotManagement.scala:436)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:43.888955Z","level":"error","event":"\tat org.apache.spark.sql.delta.metering.DeltaLogging.recordFrameProfile(DeltaLogging.scala:140)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:43.889311Z","level":"error","event":"\tat org.apache.spark.sql.delta.metering.DeltaLogging.recordFrameProfile$(DeltaLogging.scala:138)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:43.889774Z","level":"error","event":"\tat org.apache.spark.sql.delta.DeltaLog.recordFrameProfile(DeltaLog.scala:72)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:43.890272Z","level":"error","event":"\tat org.apache.spark.sql.delta.SnapshotManagement.getSnapshotAtInit(SnapshotManagement.scala:434)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:43.890694Z","level":"error","event":"\tat org.apache.spark.sql.delta.SnapshotManagement.getSnapshotAtInit$(SnapshotManagement.scala:433)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:43.891124Z","level":"error","event":"\tat org.apache.spark.sql.delta.DeltaLog.getSnapshotAtInit(DeltaLog.scala:72)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:43.891676Z","level":"error","event":"\tat org.apache.spark.sql.delta.SnapshotManagement.$init$(SnapshotManagement.scala:60)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:43.892126Z","level":"error","event":"\tat org.apache.spark.sql.delta.DeltaLog.<init>(DeltaLog.scala:78)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:43.892658Z","level":"error","event":"\tat org.apache.spark.sql.delta.DeltaLog$.$anonfun$apply$4(DeltaLog.scala:779)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:43.893135Z","level":"error","event":"\tat org.apache.spark.sql.catalyst.plans.logical.AnalysisHelper$.allowInvokingTransformsInAnalyzer(AnalysisHelper.scala:323)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:43.893444Z","level":"error","event":"\tat org.apache.spark.sql.delta.DeltaLog$.$anonfun$apply$3(DeltaLog.scala:774)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:43.893791Z","level":"error","event":"\tat org.apache.spark.sql.delta.metering.DeltaLogging.recordFrameProfile(DeltaLogging.scala:140)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:43.894321Z","level":"error","event":"\tat org.apache.spark.sql.delta.metering.DeltaLogging.recordFrameProfile$(DeltaLogging.scala:138)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:43.894972Z","level":"error","event":"\tat org.apache.spark.sql.delta.DeltaLog$.recordFrameProfile(DeltaLog.scala:598)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:43.895446Z","level":"error","event":"\tat org.apache.spark.sql.delta.metering.DeltaLogging.$anonfun$recordDeltaOperationInternal$1(DeltaLogging.scala:133)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:43.895927Z","level":"error","event":"\tat com.databricks.spark.util.DatabricksLogging.recordOperation(DatabricksLogging.scala:128)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:43.896369Z","level":"error","event":"\tat com.databricks.spark.util.DatabricksLogging.recordOperation$(DatabricksLogging.scala:117)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:43.896841Z","level":"error","event":"\tat org.apache.spark.sql.delta.DeltaLog$.recordOperation(DeltaLog.scala:598)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:43.897130Z","level":"error","event":"\tat org.apache.spark.sql.delta.metering.DeltaLogging.recordDeltaOperationInternal(DeltaLogging.scala:132)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:43.897515Z","level":"error","event":"\tat org.apache.spark.sql.delta.metering.DeltaLogging.recordDeltaOperation(DeltaLogging.scala:122)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:43.897883Z","level":"error","event":"\tat org.apache.spark.sql.delta.metering.DeltaLogging.recordDeltaOperation$(DeltaLogging.scala:112)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:43.898311Z","level":"error","event":"\tat org.apache.spark.sql.delta.DeltaLog$.recordDeltaOperation(DeltaLog.scala:598)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:43.898908Z","level":"error","event":"\tat org.apache.spark.sql.delta.DeltaLog$.createDeltaLog$1(DeltaLog.scala:773)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:43.899247Z","level":"error","event":"\tat org.apache.spark.sql.delta.DeltaLog$.$anonfun$apply$5(DeltaLog.scala:791)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:43.899570Z","level":"error","event":"\tat com.google.common.cache.LocalCache$LocalManualCache$1.load(LocalCache.java:4792)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:43.899858Z","level":"error","event":"\tat com.google.common.cache.LocalCache$LoadingValueReference.loadFuture(LocalCache.java:3599)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:43.900157Z","level":"error","event":"\tat com.google.common.cache.LocalCache$Segment.loadSync(LocalCache.java:2379)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:43.900466Z","level":"error","event":"\tat com.google.common.cache.LocalCache$Segment.lockedGetOrLoad(LocalCache.java:2342)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:43.900750Z","level":"error","event":"\tat com.google.common.cache.LocalCache$Segment.get(LocalCache.java:2257)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:43.901110Z","level":"error","event":"\tat com.google.common.cache.LocalCache.get(LocalCache.java:4000)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:43.901442Z","level":"error","event":"\tat com.google.common.cache.LocalCache$LocalManualCache.get(LocalCache.java:4789)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:43.901698Z","level":"error","event":"\tat org.apache.spark.sql.delta.DeltaLog$.getDeltaLogFromCache$1(DeltaLog.scala:790)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:43.901920Z","level":"error","event":"\tat org.apache.spark.sql.delta.DeltaLog$.apply(DeltaLog.scala:800)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:43.902241Z","level":"error","event":"\tat org.apache.spark.sql.delta.DeltaLog$.forTable(DeltaLog.scala:677)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:43.902572Z","level":"error","event":"\tat org.apache.spark.sql.delta.catalog.DeltaTableV2.$anonfun$deltaLog$1(DeltaTableV2.scala:91)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:43.902845Z","level":"error","event":"\tat org.apache.spark.sql.delta.catalog.DeltaTableV2$.withEnrichedUnsupportedTableException(DeltaTableV2.scala:364)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:43.903110Z","level":"error","event":"\tat org.apache.spark.sql.delta.catalog.DeltaTableV2.deltaLog$lzycompute(DeltaTableV2.scala:91)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:43.903448Z","level":"error","event":"\tat org.apache.spark.sql.delta.catalog.DeltaTableV2.deltaLog(DeltaTableV2.scala:89)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:43.903758Z","level":"error","event":"\tat org.apache.spark.sql.delta.catalog.DeltaTableV2.$anonfun$initialSnapshot$4(DeltaTableV2.scala:144)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:43.904031Z","level":"error","event":"\tat scala.Option.getOrElse(Option.scala:189)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:43.904341Z","level":"error","event":"\tat org.apache.spark.sql.delta.catalog.DeltaTableV2.$anonfun$initialSnapshot$1(DeltaTableV2.scala:144)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:43.904653Z","level":"error","event":"\tat org.apache.spark.sql.delta.catalog.DeltaTableV2$.withEnrichedUnsupportedTableException(DeltaTableV2.scala:364)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:43.904952Z","level":"error","event":"\tat org.apache.spark.sql.delta.catalog.DeltaTableV2.initialSnapshot$lzycompute(DeltaTableV2.scala:143)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:43.905309Z","level":"error","event":"\tat org.apache.spark.sql.delta.catalog.DeltaTableV2.initialSnapshot(DeltaTableV2.scala:123)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:43.905635Z","level":"error","event":"\tat org.apache.spark.sql.delta.catalog.DeltaTableV2.toBaseRelation$lzycompute(DeltaTableV2.scala:235)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:43.905924Z","level":"error","event":"\tat org.apache.spark.sql.delta.catalog.DeltaTableV2.toBaseRelation(DeltaTableV2.scala:233)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:43.906204Z","level":"error","event":"\tat org.apache.spark.sql.delta.sources.DeltaDataSource.$anonfun$createRelation$5(DeltaDataSource.scala:250)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:43.906514Z","level":"error","event":"\tat org.apache.spark.sql.delta.metering.DeltaLogging.recordFrameProfile(DeltaLogging.scala:140)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:43.906799Z","level":"error","event":"\tat org.apache.spark.sql.delta.metering.DeltaLogging.recordFrameProfile$(DeltaLogging.scala:138)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:43.907070Z","level":"error","event":"\tat org.apache.spark.sql.delta.sources.DeltaDataSource.recordFrameProfile(DeltaDataSource.scala:49)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:43.907393Z","level":"error","event":"\tat org.apache.spark.sql.delta.sources.DeltaDataSource.createRelation(DeltaDataSource.scala:209)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:43.907691Z","level":"error","event":"\tat org.apache.spark.sql.execution.datasources.DataSource.resolveRelation(DataSource.scala:346)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:43.908005Z","level":"error","event":"\tat org.apache.spark.sql.DataFrameReader.loadV1Source(DataFrameReader.scala:229)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:43.908440Z","level":"error","event":"\tat org.apache.spark.sql.DataFrameReader.$anonfun$load$2(DataFrameReader.scala:211)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:43.908764Z","level":"error","event":"\tat scala.Option.getOrElse(Option.scala:189)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:43.909160Z","level":"error","event":"\tat org.apache.spark.sql.DataFrameReader.load(DataFrameReader.scala:211)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:43.909720Z","level":"error","event":"\tat org.apache.spark.sql.DataFrameReader.load(DataFrameReader.scala:186)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:43.910020Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:43.910435Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:43.910866Z","level":"error","event":"\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:43.911271Z","level":"error","event":"\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:43.911511Z","level":"error","event":"\tat py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:43.911868Z","level":"error","event":"\tat py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:43.912183Z","level":"error","event":"\tat py4j.Gateway.invoke(Gateway.java:282)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:43.912470Z","level":"error","event":"\tat py4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:43.912807Z","level":"error","event":"\tat py4j.commands.CallCommand.execute(CallCommand.java:79)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:43.913155Z","level":"error","event":"\tat py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:43.913429Z","level":"error","event":"\tat py4j.ClientServerConnection.run(ClientServerConnection.java:106)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:43.913729Z","level":"error","event":"\tat java.base/java.lang.Thread.run(Thread.java:840)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:43.914072Z","level":"error","event":"Caused by: com.amazonaws.services.s3.model.AmazonS3Exception: Forbidden (Service: Amazon S3; Status Code: 403; Error Code: 403 Forbidden; Request ID: 185212F895726FAF; S3 Extended Request ID: dd9025bab4ad464b049177c95eb6ebf374d3b3fd1af9251148b658df7ac2e3e8; Proxy: null), S3 Extended Request ID: dd9025bab4ad464b049177c95eb6ebf374d3b3fd1af9251148b658df7ac2e3e8","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:43.914480Z","level":"error","event":"\tat com.amazonaws.http.AmazonHttpClient$RequestExecutor.handleErrorResponse(AmazonHttpClient.java:1879)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:43.914821Z","level":"error","event":"\tat com.amazonaws.http.AmazonHttpClient$RequestExecutor.handleServiceErrorResponse(AmazonHttpClient.java:1418)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:43.915238Z","level":"error","event":"\tat com.amazonaws.http.AmazonHttpClient$RequestExecutor.executeOneRequest(AmazonHttpClient.java:1387)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:43.915780Z","level":"error","event":"\tat com.amazonaws.http.AmazonHttpClient$RequestExecutor.executeHelper(AmazonHttpClient.java:1157)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:43.916467Z","level":"error","event":"\tat com.amazonaws.http.AmazonHttpClient$RequestExecutor.doExecute(AmazonHttpClient.java:814)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:43.916867Z","level":"error","event":"\tat com.amazonaws.http.AmazonHttpClient$RequestExecutor.executeWithTimer(AmazonHttpClient.java:781)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:43.917154Z","level":"error","event":"\tat com.amazonaws.http.AmazonHttpClient$RequestExecutor.execute(AmazonHttpClient.java:755)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:43.917413Z","level":"error","event":"\tat com.amazonaws.http.AmazonHttpClient$RequestExecutor.access$500(AmazonHttpClient.java:715)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:43.917646Z","level":"error","event":"\tat com.amazonaws.http.AmazonHttpClient$RequestExecutionBuilderImpl.execute(AmazonHttpClient.java:697)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:43.917967Z","level":"error","event":"\tat com.amazonaws.http.AmazonHttpClient.execute(AmazonHttpClient.java:561)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:43.918324Z","level":"error","event":"\tat com.amazonaws.http.AmazonHttpClient.execute(AmazonHttpClient.java:541)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:43.918651Z","level":"error","event":"\tat com.amazonaws.services.s3.AmazonS3Client.invoke(AmazonS3Client.java:5520)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:43.919036Z","level":"error","event":"\tat com.amazonaws.services.s3.AmazonS3Client.invoke(AmazonS3Client.java:5467)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:43.919349Z","level":"error","event":"\tat com.amazonaws.services.s3.AmazonS3Client.getObjectMetadata(AmazonS3Client.java:1402)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:43.919585Z","level":"error","event":"\tat org.apache.hadoop.fs.s3a.S3AFileSystem.lambda$getObjectMetadata$10(S3AFileSystem.java:2545)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:43.919894Z","level":"error","event":"\tat org.apache.hadoop.fs.s3a.Invoker.retryUntranslated(Invoker.java:414)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:43.920192Z","level":"error","event":"\tat org.apache.hadoop.fs.s3a.Invoker.retryUntranslated(Invoker.java:377)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:43.920449Z","level":"error","event":"\tat org.apache.hadoop.fs.s3a.S3AFileSystem.getObjectMetadata(S3AFileSystem.java:2533)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:43.920819Z","level":"error","event":"\tat org.apache.hadoop.fs.s3a.S3AFileSystem.getObjectMetadata(S3AFileSystem.java:2513)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:43.921238Z","level":"error","event":"\tat org.apache.hadoop.fs.s3a.S3AFileSystem.s3GetFileStatus(S3AFileSystem.java:3776)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:43.921637Z","level":"error","event":"\t... 94 more","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:44.881132Z","level":"error","event":"25/07/14 09:07:44 WARN DeltaLog: Failed to parse s3a://activefence-bucket/bbc_tech/silver/_delta_log/_last_checkpoint. This may happen if there was an error during read operation, or a file appears to be partial. Sleeping and trying again.","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:44.881767Z","level":"error","event":"java.nio.file.AccessDeniedException: s3a://activefence-bucket/bbc_tech/silver/_delta_log/_last_checkpoint: getFileStatus on s3a://activefence-bucket/bbc_tech/silver/_delta_log/_last_checkpoint: com.amazonaws.services.s3.model.AmazonS3Exception: Forbidden (Service: Amazon S3; Status Code: 403; Error Code: 403 Forbidden; Request ID: 185212F8D1971DB8; S3 Extended Request ID: dd9025bab4ad464b049177c95eb6ebf374d3b3fd1af9251148b658df7ac2e3e8; Proxy: null), S3 Extended Request ID: dd9025bab4ad464b049177c95eb6ebf374d3b3fd1af9251148b658df7ac2e3e8:403 Forbidden","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:44.882300Z","level":"error","event":"\tat org.apache.hadoop.fs.s3a.S3AUtils.translateException(S3AUtils.java:255)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:44.882788Z","level":"error","event":"\tat org.apache.hadoop.fs.s3a.S3AUtils.translateException(S3AUtils.java:175)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:44.883164Z","level":"error","event":"\tat org.apache.hadoop.fs.s3a.S3AFileSystem.s3GetFileStatus(S3AFileSystem.java:3796)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:44.883510Z","level":"error","event":"\tat org.apache.hadoop.fs.s3a.S3AFileSystem.innerGetFileStatus(S3AFileSystem.java:3688)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:44.883895Z","level":"error","event":"\tat org.apache.hadoop.fs.s3a.S3AFileSystem.extractOrFetchSimpleFileStatus(S3AFileSystem.java:5401)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:44.884326Z","level":"error","event":"\tat org.apache.hadoop.fs.s3a.S3AFileSystem.open(S3AFileSystem.java:1465)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:44.884795Z","level":"error","event":"\tat org.apache.hadoop.fs.s3a.S3AFileSystem.open(S3AFileSystem.java:1441)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:44.885427Z","level":"error","event":"\tat org.apache.hadoop.fs.FileSystem.open(FileSystem.java:976)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:44.885843Z","level":"error","event":"\tat io.delta.storage.HadoopFileSystemLogStore.read(HadoopFileSystemLogStore.java:46)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:44.886223Z","level":"error","event":"\tat org.apache.spark.sql.delta.storage.LogStoreAdaptor.read(LogStore.scala:412)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:44.886696Z","level":"error","event":"\tat org.apache.spark.sql.delta.storage.DelegatingLogStore.read(DelegatingLogStore.scala:96)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:44.887170Z","level":"error","event":"\tat org.apache.spark.sql.delta.Checkpoints.$anonfun$loadMetadataFromFile$1(Checkpoints.scala:361)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:44.887731Z","level":"error","event":"\tat org.apache.spark.sql.delta.metering.DeltaLogging.recordFrameProfile(DeltaLogging.scala:140)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:44.888203Z","level":"error","event":"\tat org.apache.spark.sql.delta.metering.DeltaLogging.recordFrameProfile$(DeltaLogging.scala:138)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:44.888955Z","level":"error","event":"\tat org.apache.spark.sql.delta.DeltaLog.recordFrameProfile(DeltaLog.scala:72)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:44.889431Z","level":"error","event":"\tat org.apache.spark.sql.delta.metering.DeltaLogging.$anonfun$recordDeltaOperationInternal$1(DeltaLogging.scala:133)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:44.889984Z","level":"error","event":"\tat com.databricks.spark.util.DatabricksLogging.recordOperation(DatabricksLogging.scala:128)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:44.890407Z","level":"error","event":"\tat com.databricks.spark.util.DatabricksLogging.recordOperation$(DatabricksLogging.scala:117)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:44.890926Z","level":"error","event":"\tat org.apache.spark.sql.delta.DeltaLog.recordOperation(DeltaLog.scala:72)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:44.891303Z","level":"error","event":"\tat org.apache.spark.sql.delta.metering.DeltaLogging.recordDeltaOperationInternal(DeltaLogging.scala:132)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:44.891690Z","level":"error","event":"\tat org.apache.spark.sql.delta.metering.DeltaLogging.recordDeltaOperation(DeltaLogging.scala:122)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:44.892111Z","level":"error","event":"\tat org.apache.spark.sql.delta.metering.DeltaLogging.recordDeltaOperation$(DeltaLogging.scala:112)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:44.892641Z","level":"error","event":"\tat org.apache.spark.sql.delta.DeltaLog.recordDeltaOperation(DeltaLog.scala:72)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:44.893046Z","level":"error","event":"\tat org.apache.spark.sql.delta.Checkpoints.loadMetadataFromFile(Checkpoints.scala:360)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:44.893554Z","level":"error","event":"\tat org.apache.spark.sql.delta.Checkpoints.$anonfun$loadMetadataFromFile$1(Checkpoints.scala:371)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:44.893945Z","level":"error","event":"\tat org.apache.spark.sql.delta.metering.DeltaLogging.recordFrameProfile(DeltaLogging.scala:140)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:44.894646Z","level":"error","event":"\tat org.apache.spark.sql.delta.metering.DeltaLogging.recordFrameProfile$(DeltaLogging.scala:138)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:44.895151Z","level":"error","event":"\tat org.apache.spark.sql.delta.DeltaLog.recordFrameProfile(DeltaLog.scala:72)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:44.895651Z","level":"error","event":"\tat org.apache.spark.sql.delta.metering.DeltaLogging.$anonfun$recordDeltaOperationInternal$1(DeltaLogging.scala:133)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:44.896034Z","level":"error","event":"\tat com.databricks.spark.util.DatabricksLogging.recordOperation(DatabricksLogging.scala:128)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:44.896455Z","level":"error","event":"\tat com.databricks.spark.util.DatabricksLogging.recordOperation$(DatabricksLogging.scala:117)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:44.896916Z","level":"error","event":"\tat org.apache.spark.sql.delta.DeltaLog.recordOperation(DeltaLog.scala:72)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:44.897286Z","level":"error","event":"\tat org.apache.spark.sql.delta.metering.DeltaLogging.recordDeltaOperationInternal(DeltaLogging.scala:132)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:44.897637Z","level":"error","event":"\tat org.apache.spark.sql.delta.metering.DeltaLogging.recordDeltaOperation(DeltaLogging.scala:122)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:44.897995Z","level":"error","event":"\tat org.apache.spark.sql.delta.metering.DeltaLogging.recordDeltaOperation$(DeltaLogging.scala:112)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:44.898459Z","level":"error","event":"\tat org.apache.spark.sql.delta.DeltaLog.recordDeltaOperation(DeltaLog.scala:72)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:44.898972Z","level":"error","event":"\tat org.apache.spark.sql.delta.Checkpoints.loadMetadataFromFile(Checkpoints.scala:360)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:44.899358Z","level":"error","event":"\tat org.apache.spark.sql.delta.Checkpoints.readLastCheckpointFile(Checkpoints.scala:354)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:44.899764Z","level":"error","event":"\tat org.apache.spark.sql.delta.Checkpoints.readLastCheckpointFile$(Checkpoints.scala:353)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:44.900091Z","level":"error","event":"\tat org.apache.spark.sql.delta.DeltaLog.readLastCheckpointFile(DeltaLog.scala:72)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:44.900373Z","level":"error","event":"\tat org.apache.spark.sql.delta.SnapshotManagement.$anonfun$getSnapshotAtInit$1(SnapshotManagement.scala:436)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:44.900702Z","level":"error","event":"\tat org.apache.spark.sql.delta.metering.DeltaLogging.recordFrameProfile(DeltaLogging.scala:140)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:44.901122Z","level":"error","event":"\tat org.apache.spark.sql.delta.metering.DeltaLogging.recordFrameProfile$(DeltaLogging.scala:138)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:44.901638Z","level":"error","event":"\tat org.apache.spark.sql.delta.DeltaLog.recordFrameProfile(DeltaLog.scala:72)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:44.901994Z","level":"error","event":"\tat org.apache.spark.sql.delta.SnapshotManagement.getSnapshotAtInit(SnapshotManagement.scala:434)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:44.902456Z","level":"error","event":"\tat org.apache.spark.sql.delta.SnapshotManagement.getSnapshotAtInit$(SnapshotManagement.scala:433)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:44.902784Z","level":"error","event":"\tat org.apache.spark.sql.delta.DeltaLog.getSnapshotAtInit(DeltaLog.scala:72)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:44.903290Z","level":"error","event":"\tat org.apache.spark.sql.delta.SnapshotManagement.$init$(SnapshotManagement.scala:60)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:44.903741Z","level":"error","event":"\tat org.apache.spark.sql.delta.DeltaLog.<init>(DeltaLog.scala:78)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:44.904110Z","level":"error","event":"\tat org.apache.spark.sql.delta.DeltaLog$.$anonfun$apply$4(DeltaLog.scala:779)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:44.904449Z","level":"error","event":"\tat org.apache.spark.sql.catalyst.plans.logical.AnalysisHelper$.allowInvokingTransformsInAnalyzer(AnalysisHelper.scala:323)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:44.904836Z","level":"error","event":"\tat org.apache.spark.sql.delta.DeltaLog$.$anonfun$apply$3(DeltaLog.scala:774)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:44.905232Z","level":"error","event":"\tat org.apache.spark.sql.delta.metering.DeltaLogging.recordFrameProfile(DeltaLogging.scala:140)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:44.905553Z","level":"error","event":"\tat org.apache.spark.sql.delta.metering.DeltaLogging.recordFrameProfile$(DeltaLogging.scala:138)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:44.906011Z","level":"error","event":"\tat org.apache.spark.sql.delta.DeltaLog$.recordFrameProfile(DeltaLog.scala:598)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:44.906430Z","level":"error","event":"\tat org.apache.spark.sql.delta.metering.DeltaLogging.$anonfun$recordDeltaOperationInternal$1(DeltaLogging.scala:133)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:44.906786Z","level":"error","event":"\tat com.databricks.spark.util.DatabricksLogging.recordOperation(DatabricksLogging.scala:128)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:44.907198Z","level":"error","event":"\tat com.databricks.spark.util.DatabricksLogging.recordOperation$(DatabricksLogging.scala:117)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:44.907531Z","level":"error","event":"\tat org.apache.spark.sql.delta.DeltaLog$.recordOperation(DeltaLog.scala:598)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:44.907969Z","level":"error","event":"\tat org.apache.spark.sql.delta.metering.DeltaLogging.recordDeltaOperationInternal(DeltaLogging.scala:132)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:44.908441Z","level":"error","event":"\tat org.apache.spark.sql.delta.metering.DeltaLogging.recordDeltaOperation(DeltaLogging.scala:122)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:44.908949Z","level":"error","event":"\tat org.apache.spark.sql.delta.metering.DeltaLogging.recordDeltaOperation$(DeltaLogging.scala:112)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:44.909319Z","level":"error","event":"\tat org.apache.spark.sql.delta.DeltaLog$.recordDeltaOperation(DeltaLog.scala:598)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:44.909634Z","level":"error","event":"\tat org.apache.spark.sql.delta.DeltaLog$.createDeltaLog$1(DeltaLog.scala:773)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:44.909897Z","level":"error","event":"\tat org.apache.spark.sql.delta.DeltaLog$.$anonfun$apply$5(DeltaLog.scala:791)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:44.910191Z","level":"error","event":"\tat com.google.common.cache.LocalCache$LocalManualCache$1.load(LocalCache.java:4792)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:44.910584Z","level":"error","event":"\tat com.google.common.cache.LocalCache$LoadingValueReference.loadFuture(LocalCache.java:3599)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:44.910863Z","level":"error","event":"\tat com.google.common.cache.LocalCache$Segment.loadSync(LocalCache.java:2379)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:44.911133Z","level":"error","event":"\tat com.google.common.cache.LocalCache$Segment.lockedGetOrLoad(LocalCache.java:2342)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:44.911396Z","level":"error","event":"\tat com.google.common.cache.LocalCache$Segment.get(LocalCache.java:2257)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:44.911667Z","level":"error","event":"\tat com.google.common.cache.LocalCache.get(LocalCache.java:4000)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:44.911956Z","level":"error","event":"\tat com.google.common.cache.LocalCache$LocalManualCache.get(LocalCache.java:4789)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:44.912203Z","level":"error","event":"\tat org.apache.spark.sql.delta.DeltaLog$.getDeltaLogFromCache$1(DeltaLog.scala:790)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:44.912521Z","level":"error","event":"\tat org.apache.spark.sql.delta.DeltaLog$.apply(DeltaLog.scala:800)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:44.912927Z","level":"error","event":"\tat org.apache.spark.sql.delta.DeltaLog$.forTable(DeltaLog.scala:677)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:44.913214Z","level":"error","event":"\tat org.apache.spark.sql.delta.catalog.DeltaTableV2.$anonfun$deltaLog$1(DeltaTableV2.scala:91)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:44.913476Z","level":"error","event":"\tat org.apache.spark.sql.delta.catalog.DeltaTableV2$.withEnrichedUnsupportedTableException(DeltaTableV2.scala:364)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:44.913820Z","level":"error","event":"\tat org.apache.spark.sql.delta.catalog.DeltaTableV2.deltaLog$lzycompute(DeltaTableV2.scala:91)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:44.914146Z","level":"error","event":"\tat org.apache.spark.sql.delta.catalog.DeltaTableV2.deltaLog(DeltaTableV2.scala:89)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:44.914541Z","level":"error","event":"\tat org.apache.spark.sql.delta.catalog.DeltaTableV2.$anonfun$initialSnapshot$4(DeltaTableV2.scala:144)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:44.915055Z","level":"error","event":"\tat scala.Option.getOrElse(Option.scala:189)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:44.915964Z","level":"error","event":"\tat org.apache.spark.sql.delta.catalog.DeltaTableV2.$anonfun$initialSnapshot$1(DeltaTableV2.scala:144)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:44.916511Z","level":"error","event":"\tat org.apache.spark.sql.delta.catalog.DeltaTableV2$.withEnrichedUnsupportedTableException(DeltaTableV2.scala:364)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:44.916916Z","level":"error","event":"\tat org.apache.spark.sql.delta.catalog.DeltaTableV2.initialSnapshot$lzycompute(DeltaTableV2.scala:143)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:44.917206Z","level":"error","event":"\tat org.apache.spark.sql.delta.catalog.DeltaTableV2.initialSnapshot(DeltaTableV2.scala:123)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:44.917522Z","level":"error","event":"\tat org.apache.spark.sql.delta.catalog.DeltaTableV2.toBaseRelation$lzycompute(DeltaTableV2.scala:235)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:44.917927Z","level":"error","event":"\tat org.apache.spark.sql.delta.catalog.DeltaTableV2.toBaseRelation(DeltaTableV2.scala:233)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:44.918272Z","level":"error","event":"\tat org.apache.spark.sql.delta.sources.DeltaDataSource.$anonfun$createRelation$5(DeltaDataSource.scala:250)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:44.918600Z","level":"error","event":"\tat org.apache.spark.sql.delta.metering.DeltaLogging.recordFrameProfile(DeltaLogging.scala:140)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:44.918937Z","level":"error","event":"\tat org.apache.spark.sql.delta.metering.DeltaLogging.recordFrameProfile$(DeltaLogging.scala:138)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:44.919250Z","level":"error","event":"\tat org.apache.spark.sql.delta.sources.DeltaDataSource.recordFrameProfile(DeltaDataSource.scala:49)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:44.919633Z","level":"error","event":"\tat org.apache.spark.sql.delta.sources.DeltaDataSource.createRelation(DeltaDataSource.scala:209)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:44.919932Z","level":"error","event":"\tat org.apache.spark.sql.execution.datasources.DataSource.resolveRelation(DataSource.scala:346)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:44.920261Z","level":"error","event":"\tat org.apache.spark.sql.DataFrameReader.loadV1Source(DataFrameReader.scala:229)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:44.920587Z","level":"error","event":"\tat org.apache.spark.sql.DataFrameReader.$anonfun$load$2(DataFrameReader.scala:211)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:44.920863Z","level":"error","event":"\tat scala.Option.getOrElse(Option.scala:189)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:44.921298Z","level":"error","event":"\tat org.apache.spark.sql.DataFrameReader.load(DataFrameReader.scala:211)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:44.921603Z","level":"error","event":"\tat org.apache.spark.sql.DataFrameReader.load(DataFrameReader.scala:186)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:44.921895Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:44.922215Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:44.922655Z","level":"error","event":"\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:44.923041Z","level":"error","event":"\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:44.923416Z","level":"error","event":"\tat py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:44.923738Z","level":"error","event":"\tat py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:44.924080Z","level":"error","event":"\tat py4j.Gateway.invoke(Gateway.java:282)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:44.924362Z","level":"error","event":"\tat py4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:44.924700Z","level":"error","event":"\tat py4j.commands.CallCommand.execute(CallCommand.java:79)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:44.925101Z","level":"error","event":"\tat py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:44.925521Z","level":"error","event":"\tat py4j.ClientServerConnection.run(ClientServerConnection.java:106)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:44.925886Z","level":"error","event":"\tat java.base/java.lang.Thread.run(Thread.java:840)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:44.926296Z","level":"error","event":"Caused by: com.amazonaws.services.s3.model.AmazonS3Exception: Forbidden (Service: Amazon S3; Status Code: 403; Error Code: 403 Forbidden; Request ID: 185212F8D1971DB8; S3 Extended Request ID: dd9025bab4ad464b049177c95eb6ebf374d3b3fd1af9251148b658df7ac2e3e8; Proxy: null), S3 Extended Request ID: dd9025bab4ad464b049177c95eb6ebf374d3b3fd1af9251148b658df7ac2e3e8","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:44.926691Z","level":"error","event":"\tat com.amazonaws.http.AmazonHttpClient$RequestExecutor.handleErrorResponse(AmazonHttpClient.java:1879)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:44.927156Z","level":"error","event":"\tat com.amazonaws.http.AmazonHttpClient$RequestExecutor.handleServiceErrorResponse(AmazonHttpClient.java:1418)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:44.927571Z","level":"error","event":"\tat com.amazonaws.http.AmazonHttpClient$RequestExecutor.executeOneRequest(AmazonHttpClient.java:1387)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:44.927943Z","level":"error","event":"\tat com.amazonaws.http.AmazonHttpClient$RequestExecutor.executeHelper(AmazonHttpClient.java:1157)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:44.928414Z","level":"error","event":"\tat com.amazonaws.http.AmazonHttpClient$RequestExecutor.doExecute(AmazonHttpClient.java:814)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:44.928733Z","level":"error","event":"\tat com.amazonaws.http.AmazonHttpClient$RequestExecutor.executeWithTimer(AmazonHttpClient.java:781)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:44.929083Z","level":"error","event":"\tat com.amazonaws.http.AmazonHttpClient$RequestExecutor.execute(AmazonHttpClient.java:755)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:44.929430Z","level":"error","event":"\tat com.amazonaws.http.AmazonHttpClient$RequestExecutor.access$500(AmazonHttpClient.java:715)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:44.929792Z","level":"error","event":"\tat com.amazonaws.http.AmazonHttpClient$RequestExecutionBuilderImpl.execute(AmazonHttpClient.java:697)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:44.930103Z","level":"error","event":"\tat com.amazonaws.http.AmazonHttpClient.execute(AmazonHttpClient.java:561)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:44.930481Z","level":"error","event":"\tat com.amazonaws.http.AmazonHttpClient.execute(AmazonHttpClient.java:541)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:44.930936Z","level":"error","event":"\tat com.amazonaws.services.s3.AmazonS3Client.invoke(AmazonS3Client.java:5520)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:44.931381Z","level":"error","event":"\tat com.amazonaws.services.s3.AmazonS3Client.invoke(AmazonS3Client.java:5467)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:44.931824Z","level":"error","event":"\tat com.amazonaws.services.s3.AmazonS3Client.getObjectMetadata(AmazonS3Client.java:1402)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:44.932287Z","level":"error","event":"\tat org.apache.hadoop.fs.s3a.S3AFileSystem.lambda$getObjectMetadata$10(S3AFileSystem.java:2545)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:44.932658Z","level":"error","event":"\tat org.apache.hadoop.fs.s3a.Invoker.retryUntranslated(Invoker.java:414)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:44.933061Z","level":"error","event":"\tat org.apache.hadoop.fs.s3a.Invoker.retryUntranslated(Invoker.java:377)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:44.933412Z","level":"error","event":"\tat org.apache.hadoop.fs.s3a.S3AFileSystem.getObjectMetadata(S3AFileSystem.java:2533)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:44.933732Z","level":"error","event":"\tat org.apache.hadoop.fs.s3a.S3AFileSystem.getObjectMetadata(S3AFileSystem.java:2513)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:44.933989Z","level":"error","event":"\tat org.apache.hadoop.fs.s3a.S3AFileSystem.s3GetFileStatus(S3AFileSystem.java:3776)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:44.934404Z","level":"error","event":"\t... 107 more","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:45.898045Z","level":"error","event":"25/07/14 09:07:45 WARN DeltaLog: Failed to parse s3a://activefence-bucket/bbc_tech/silver/_delta_log/_last_checkpoint. This may happen if there was an error during read operation, or a file appears to be partial. Sleeping and trying again.","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:45.898600Z","level":"error","event":"java.nio.file.AccessDeniedException: s3a://activefence-bucket/bbc_tech/silver/_delta_log/_last_checkpoint: getFileStatus on s3a://activefence-bucket/bbc_tech/silver/_delta_log/_last_checkpoint: com.amazonaws.services.s3.model.AmazonS3Exception: Forbidden (Service: Amazon S3; Status Code: 403; Error Code: 403 Forbidden; Request ID: 185212F90DA29432; S3 Extended Request ID: dd9025bab4ad464b049177c95eb6ebf374d3b3fd1af9251148b658df7ac2e3e8; Proxy: null), S3 Extended Request ID: dd9025bab4ad464b049177c95eb6ebf374d3b3fd1af9251148b658df7ac2e3e8:403 Forbidden","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:45.898997Z","level":"error","event":"\tat org.apache.hadoop.fs.s3a.S3AUtils.translateException(S3AUtils.java:255)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:45.899336Z","level":"error","event":"\tat org.apache.hadoop.fs.s3a.S3AUtils.translateException(S3AUtils.java:175)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:45.899658Z","level":"error","event":"\tat org.apache.hadoop.fs.s3a.S3AFileSystem.s3GetFileStatus(S3AFileSystem.java:3796)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:45.900001Z","level":"error","event":"\tat org.apache.hadoop.fs.s3a.S3AFileSystem.innerGetFileStatus(S3AFileSystem.java:3688)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:45.900329Z","level":"error","event":"\tat org.apache.hadoop.fs.s3a.S3AFileSystem.extractOrFetchSimpleFileStatus(S3AFileSystem.java:5401)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:45.900793Z","level":"error","event":"\tat org.apache.hadoop.fs.s3a.S3AFileSystem.open(S3AFileSystem.java:1465)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:45.901155Z","level":"error","event":"\tat org.apache.hadoop.fs.s3a.S3AFileSystem.open(S3AFileSystem.java:1441)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:45.901795Z","level":"error","event":"\tat org.apache.hadoop.fs.FileSystem.open(FileSystem.java:976)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:45.902110Z","level":"error","event":"\tat io.delta.storage.HadoopFileSystemLogStore.read(HadoopFileSystemLogStore.java:46)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:45.902441Z","level":"error","event":"\tat org.apache.spark.sql.delta.storage.LogStoreAdaptor.read(LogStore.scala:412)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:45.902845Z","level":"error","event":"\tat org.apache.spark.sql.delta.storage.DelegatingLogStore.read(DelegatingLogStore.scala:96)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:45.903206Z","level":"error","event":"\tat org.apache.spark.sql.delta.Checkpoints.$anonfun$loadMetadataFromFile$1(Checkpoints.scala:361)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:45.903596Z","level":"error","event":"\tat org.apache.spark.sql.delta.metering.DeltaLogging.recordFrameProfile(DeltaLogging.scala:140)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:45.903933Z","level":"error","event":"\tat org.apache.spark.sql.delta.metering.DeltaLogging.recordFrameProfile$(DeltaLogging.scala:138)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:45.904251Z","level":"error","event":"\tat org.apache.spark.sql.delta.DeltaLog.recordFrameProfile(DeltaLog.scala:72)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:45.904518Z","level":"error","event":"\tat org.apache.spark.sql.delta.metering.DeltaLogging.$anonfun$recordDeltaOperationInternal$1(DeltaLogging.scala:133)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:45.904750Z","level":"error","event":"\tat com.databricks.spark.util.DatabricksLogging.recordOperation(DatabricksLogging.scala:128)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:45.905058Z","level":"error","event":"\tat com.databricks.spark.util.DatabricksLogging.recordOperation$(DatabricksLogging.scala:117)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:45.905391Z","level":"error","event":"\tat org.apache.spark.sql.delta.DeltaLog.recordOperation(DeltaLog.scala:72)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:45.905794Z","level":"error","event":"\tat org.apache.spark.sql.delta.metering.DeltaLogging.recordDeltaOperationInternal(DeltaLogging.scala:132)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:45.906124Z","level":"error","event":"\tat org.apache.spark.sql.delta.metering.DeltaLogging.recordDeltaOperation(DeltaLogging.scala:122)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:45.906408Z","level":"error","event":"\tat org.apache.spark.sql.delta.metering.DeltaLogging.recordDeltaOperation$(DeltaLogging.scala:112)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:45.906659Z","level":"error","event":"\tat org.apache.spark.sql.delta.DeltaLog.recordDeltaOperation(DeltaLog.scala:72)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:45.906893Z","level":"error","event":"\tat org.apache.spark.sql.delta.Checkpoints.loadMetadataFromFile(Checkpoints.scala:360)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:45.907176Z","level":"error","event":"\tat org.apache.spark.sql.delta.Checkpoints.$anonfun$loadMetadataFromFile$1(Checkpoints.scala:371)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:45.907537Z","level":"error","event":"\tat org.apache.spark.sql.delta.metering.DeltaLogging.recordFrameProfile(DeltaLogging.scala:140)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:45.908035Z","level":"error","event":"\tat org.apache.spark.sql.delta.metering.DeltaLogging.recordFrameProfile$(DeltaLogging.scala:138)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:45.908377Z","level":"error","event":"\tat org.apache.spark.sql.delta.DeltaLog.recordFrameProfile(DeltaLog.scala:72)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:45.908649Z","level":"error","event":"\tat org.apache.spark.sql.delta.metering.DeltaLogging.$anonfun$recordDeltaOperationInternal$1(DeltaLogging.scala:133)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:45.908915Z","level":"error","event":"\tat com.databricks.spark.util.DatabricksLogging.recordOperation(DatabricksLogging.scala:128)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:45.909266Z","level":"error","event":"\tat com.databricks.spark.util.DatabricksLogging.recordOperation$(DatabricksLogging.scala:117)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:45.909794Z","level":"error","event":"\tat org.apache.spark.sql.delta.DeltaLog.recordOperation(DeltaLog.scala:72)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:45.910056Z","level":"error","event":"\tat org.apache.spark.sql.delta.metering.DeltaLogging.recordDeltaOperationInternal(DeltaLogging.scala:132)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:45.910277Z","level":"error","event":"\tat org.apache.spark.sql.delta.metering.DeltaLogging.recordDeltaOperation(DeltaLogging.scala:122)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:45.910473Z","level":"error","event":"\tat org.apache.spark.sql.delta.metering.DeltaLogging.recordDeltaOperation$(DeltaLogging.scala:112)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:45.910669Z","level":"error","event":"\tat org.apache.spark.sql.delta.DeltaLog.recordDeltaOperation(DeltaLog.scala:72)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:45.910963Z","level":"error","event":"\tat org.apache.spark.sql.delta.Checkpoints.loadMetadataFromFile(Checkpoints.scala:360)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:45.911227Z","level":"error","event":"\tat org.apache.spark.sql.delta.Checkpoints.$anonfun$loadMetadataFromFile$1(Checkpoints.scala:371)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:45.911442Z","level":"error","event":"\tat org.apache.spark.sql.delta.metering.DeltaLogging.recordFrameProfile(DeltaLogging.scala:140)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:45.911634Z","level":"error","event":"\tat org.apache.spark.sql.delta.metering.DeltaLogging.recordFrameProfile$(DeltaLogging.scala:138)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:45.911835Z","level":"error","event":"\tat org.apache.spark.sql.delta.DeltaLog.recordFrameProfile(DeltaLog.scala:72)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:45.912023Z","level":"error","event":"\tat org.apache.spark.sql.delta.metering.DeltaLogging.$anonfun$recordDeltaOperationInternal$1(DeltaLogging.scala:133)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:45.912235Z","level":"error","event":"\tat com.databricks.spark.util.DatabricksLogging.recordOperation(DatabricksLogging.scala:128)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:45.912476Z","level":"error","event":"\tat com.databricks.spark.util.DatabricksLogging.recordOperation$(DatabricksLogging.scala:117)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:45.912692Z","level":"error","event":"\tat org.apache.spark.sql.delta.DeltaLog.recordOperation(DeltaLog.scala:72)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:45.912886Z","level":"error","event":"\tat org.apache.spark.sql.delta.metering.DeltaLogging.recordDeltaOperationInternal(DeltaLogging.scala:132)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:45.913138Z","level":"error","event":"\tat org.apache.spark.sql.delta.metering.DeltaLogging.recordDeltaOperation(DeltaLogging.scala:122)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:45.913420Z","level":"error","event":"\tat org.apache.spark.sql.delta.metering.DeltaLogging.recordDeltaOperation$(DeltaLogging.scala:112)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:45.913798Z","level":"error","event":"\tat org.apache.spark.sql.delta.DeltaLog.recordDeltaOperation(DeltaLog.scala:72)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:45.914151Z","level":"error","event":"\tat org.apache.spark.sql.delta.Checkpoints.loadMetadataFromFile(Checkpoints.scala:360)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:45.914483Z","level":"error","event":"\tat org.apache.spark.sql.delta.Checkpoints.readLastCheckpointFile(Checkpoints.scala:354)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:45.914848Z","level":"error","event":"\tat org.apache.spark.sql.delta.Checkpoints.readLastCheckpointFile$(Checkpoints.scala:353)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:45.915405Z","level":"error","event":"\tat org.apache.spark.sql.delta.DeltaLog.readLastCheckpointFile(DeltaLog.scala:72)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:45.915754Z","level":"error","event":"\tat org.apache.spark.sql.delta.SnapshotManagement.$anonfun$getSnapshotAtInit$1(SnapshotManagement.scala:436)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:45.916042Z","level":"error","event":"\tat org.apache.spark.sql.delta.metering.DeltaLogging.recordFrameProfile(DeltaLogging.scala:140)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:45.916358Z","level":"error","event":"\tat org.apache.spark.sql.delta.metering.DeltaLogging.recordFrameProfile$(DeltaLogging.scala:138)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:45.916632Z","level":"error","event":"\tat org.apache.spark.sql.delta.DeltaLog.recordFrameProfile(DeltaLog.scala:72)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:45.916926Z","level":"error","event":"\tat org.apache.spark.sql.delta.SnapshotManagement.getSnapshotAtInit(SnapshotManagement.scala:434)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:45.917206Z","level":"error","event":"\tat org.apache.spark.sql.delta.SnapshotManagement.getSnapshotAtInit$(SnapshotManagement.scala:433)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:45.917511Z","level":"error","event":"\tat org.apache.spark.sql.delta.DeltaLog.getSnapshotAtInit(DeltaLog.scala:72)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:45.917828Z","level":"error","event":"\tat org.apache.spark.sql.delta.SnapshotManagement.$init$(SnapshotManagement.scala:60)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:45.918228Z","level":"error","event":"\tat org.apache.spark.sql.delta.DeltaLog.<init>(DeltaLog.scala:78)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:45.918592Z","level":"error","event":"\tat org.apache.spark.sql.delta.DeltaLog$.$anonfun$apply$4(DeltaLog.scala:779)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:45.918904Z","level":"error","event":"\tat org.apache.spark.sql.catalyst.plans.logical.AnalysisHelper$.allowInvokingTransformsInAnalyzer(AnalysisHelper.scala:323)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:45.919163Z","level":"error","event":"\tat org.apache.spark.sql.delta.DeltaLog$.$anonfun$apply$3(DeltaLog.scala:774)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:45.919505Z","level":"error","event":"\tat org.apache.spark.sql.delta.metering.DeltaLogging.recordFrameProfile(DeltaLogging.scala:140)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:45.919803Z","level":"error","event":"\tat org.apache.spark.sql.delta.metering.DeltaLogging.recordFrameProfile$(DeltaLogging.scala:138)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:45.920125Z","level":"error","event":"\tat org.apache.spark.sql.delta.DeltaLog$.recordFrameProfile(DeltaLog.scala:598)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:45.920430Z","level":"error","event":"\tat org.apache.spark.sql.delta.metering.DeltaLogging.$anonfun$recordDeltaOperationInternal$1(DeltaLogging.scala:133)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:45.920701Z","level":"error","event":"\tat com.databricks.spark.util.DatabricksLogging.recordOperation(DatabricksLogging.scala:128)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:45.921021Z","level":"error","event":"\tat com.databricks.spark.util.DatabricksLogging.recordOperation$(DatabricksLogging.scala:117)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:45.921374Z","level":"error","event":"\tat org.apache.spark.sql.delta.DeltaLog$.recordOperation(DeltaLog.scala:598)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:45.921748Z","level":"error","event":"\tat org.apache.spark.sql.delta.metering.DeltaLogging.recordDeltaOperationInternal(DeltaLogging.scala:132)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:45.922165Z","level":"error","event":"\tat org.apache.spark.sql.delta.metering.DeltaLogging.recordDeltaOperation(DeltaLogging.scala:122)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:45.922456Z","level":"error","event":"\tat org.apache.spark.sql.delta.metering.DeltaLogging.recordDeltaOperation$(DeltaLogging.scala:112)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:45.922836Z","level":"error","event":"\tat org.apache.spark.sql.delta.DeltaLog$.recordDeltaOperation(DeltaLog.scala:598)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:45.923123Z","level":"error","event":"\tat org.apache.spark.sql.delta.DeltaLog$.createDeltaLog$1(DeltaLog.scala:773)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:45.923397Z","level":"error","event":"\tat org.apache.spark.sql.delta.DeltaLog$.$anonfun$apply$5(DeltaLog.scala:791)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:45.923675Z","level":"error","event":"\tat com.google.common.cache.LocalCache$LocalManualCache$1.load(LocalCache.java:4792)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:45.924031Z","level":"error","event":"\tat com.google.common.cache.LocalCache$LoadingValueReference.loadFuture(LocalCache.java:3599)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:45.924391Z","level":"error","event":"\tat com.google.common.cache.LocalCache$Segment.loadSync(LocalCache.java:2379)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:45.924788Z","level":"error","event":"\tat com.google.common.cache.LocalCache$Segment.lockedGetOrLoad(LocalCache.java:2342)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:45.925100Z","level":"error","event":"\tat com.google.common.cache.LocalCache$Segment.get(LocalCache.java:2257)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:45.925442Z","level":"error","event":"\tat com.google.common.cache.LocalCache.get(LocalCache.java:4000)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:45.925739Z","level":"error","event":"\tat com.google.common.cache.LocalCache$LocalManualCache.get(LocalCache.java:4789)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:45.926019Z","level":"error","event":"\tat org.apache.spark.sql.delta.DeltaLog$.getDeltaLogFromCache$1(DeltaLog.scala:790)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:45.926313Z","level":"error","event":"\tat org.apache.spark.sql.delta.DeltaLog$.apply(DeltaLog.scala:800)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:45.926571Z","level":"error","event":"\tat org.apache.spark.sql.delta.DeltaLog$.forTable(DeltaLog.scala:677)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:45.926828Z","level":"error","event":"\tat org.apache.spark.sql.delta.catalog.DeltaTableV2.$anonfun$deltaLog$1(DeltaTableV2.scala:91)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:45.927121Z","level":"error","event":"\tat org.apache.spark.sql.delta.catalog.DeltaTableV2$.withEnrichedUnsupportedTableException(DeltaTableV2.scala:364)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:45.927438Z","level":"error","event":"\tat org.apache.spark.sql.delta.catalog.DeltaTableV2.deltaLog$lzycompute(DeltaTableV2.scala:91)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:45.927688Z","level":"error","event":"\tat org.apache.spark.sql.delta.catalog.DeltaTableV2.deltaLog(DeltaTableV2.scala:89)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:45.927962Z","level":"error","event":"\tat org.apache.spark.sql.delta.catalog.DeltaTableV2.$anonfun$initialSnapshot$4(DeltaTableV2.scala:144)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:45.928216Z","level":"error","event":"\tat scala.Option.getOrElse(Option.scala:189)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:45.928458Z","level":"error","event":"\tat org.apache.spark.sql.delta.catalog.DeltaTableV2.$anonfun$initialSnapshot$1(DeltaTableV2.scala:144)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:45.928787Z","level":"error","event":"\tat org.apache.spark.sql.delta.catalog.DeltaTableV2$.withEnrichedUnsupportedTableException(DeltaTableV2.scala:364)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:45.929388Z","level":"error","event":"\tat org.apache.spark.sql.delta.catalog.DeltaTableV2.initialSnapshot$lzycompute(DeltaTableV2.scala:143)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:45.930126Z","level":"error","event":"\tat org.apache.spark.sql.delta.catalog.DeltaTableV2.initialSnapshot(DeltaTableV2.scala:123)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:45.930462Z","level":"error","event":"\tat org.apache.spark.sql.delta.catalog.DeltaTableV2.toBaseRelation$lzycompute(DeltaTableV2.scala:235)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:45.930814Z","level":"error","event":"\tat org.apache.spark.sql.delta.catalog.DeltaTableV2.toBaseRelation(DeltaTableV2.scala:233)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:45.931115Z","level":"error","event":"\tat org.apache.spark.sql.delta.sources.DeltaDataSource.$anonfun$createRelation$5(DeltaDataSource.scala:250)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:45.931486Z","level":"error","event":"\tat org.apache.spark.sql.delta.metering.DeltaLogging.recordFrameProfile(DeltaLogging.scala:140)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:45.931848Z","level":"error","event":"\tat org.apache.spark.sql.delta.metering.DeltaLogging.recordFrameProfile$(DeltaLogging.scala:138)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:45.932248Z","level":"error","event":"\tat org.apache.spark.sql.delta.sources.DeltaDataSource.recordFrameProfile(DeltaDataSource.scala:49)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:45.932628Z","level":"error","event":"\tat org.apache.spark.sql.delta.sources.DeltaDataSource.createRelation(DeltaDataSource.scala:209)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:45.932982Z","level":"error","event":"\tat org.apache.spark.sql.execution.datasources.DataSource.resolveRelation(DataSource.scala:346)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:45.933337Z","level":"error","event":"\tat org.apache.spark.sql.DataFrameReader.loadV1Source(DataFrameReader.scala:229)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:45.933644Z","level":"error","event":"\tat org.apache.spark.sql.DataFrameReader.$anonfun$load$2(DataFrameReader.scala:211)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:45.934060Z","level":"error","event":"\tat scala.Option.getOrElse(Option.scala:189)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:45.934379Z","level":"error","event":"\tat org.apache.spark.sql.DataFrameReader.load(DataFrameReader.scala:211)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:45.934783Z","level":"error","event":"\tat org.apache.spark.sql.DataFrameReader.load(DataFrameReader.scala:186)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:45.935090Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:45.935472Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:45.935821Z","level":"error","event":"\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:45.936199Z","level":"error","event":"\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:45.936576Z","level":"error","event":"\tat py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:45.936860Z","level":"error","event":"\tat py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:45.937079Z","level":"error","event":"\tat py4j.Gateway.invoke(Gateway.java:282)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:45.937316Z","level":"error","event":"\tat py4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:45.937557Z","level":"error","event":"\tat py4j.commands.CallCommand.execute(CallCommand.java:79)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:45.937856Z","level":"error","event":"\tat py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:45.938123Z","level":"error","event":"\tat py4j.ClientServerConnection.run(ClientServerConnection.java:106)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:45.938406Z","level":"error","event":"\tat java.base/java.lang.Thread.run(Thread.java:840)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:45.938774Z","level":"error","event":"Caused by: com.amazonaws.services.s3.model.AmazonS3Exception: Forbidden (Service: Amazon S3; Status Code: 403; Error Code: 403 Forbidden; Request ID: 185212F90DA29432; S3 Extended Request ID: dd9025bab4ad464b049177c95eb6ebf374d3b3fd1af9251148b658df7ac2e3e8; Proxy: null), S3 Extended Request ID: dd9025bab4ad464b049177c95eb6ebf374d3b3fd1af9251148b658df7ac2e3e8","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:45.939097Z","level":"error","event":"\tat com.amazonaws.http.AmazonHttpClient$RequestExecutor.handleErrorResponse(AmazonHttpClient.java:1879)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:45.939371Z","level":"error","event":"\tat com.amazonaws.http.AmazonHttpClient$RequestExecutor.handleServiceErrorResponse(AmazonHttpClient.java:1418)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:45.939683Z","level":"error","event":"\tat com.amazonaws.http.AmazonHttpClient$RequestExecutor.executeOneRequest(AmazonHttpClient.java:1387)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:45.939952Z","level":"error","event":"\tat com.amazonaws.http.AmazonHttpClient$RequestExecutor.executeHelper(AmazonHttpClient.java:1157)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:45.940237Z","level":"error","event":"\tat com.amazonaws.http.AmazonHttpClient$RequestExecutor.doExecute(AmazonHttpClient.java:814)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:45.940530Z","level":"error","event":"\tat com.amazonaws.http.AmazonHttpClient$RequestExecutor.executeWithTimer(AmazonHttpClient.java:781)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:45.940809Z","level":"error","event":"\tat com.amazonaws.http.AmazonHttpClient$RequestExecutor.execute(AmazonHttpClient.java:755)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:45.941141Z","level":"error","event":"\tat com.amazonaws.http.AmazonHttpClient$RequestExecutor.access$500(AmazonHttpClient.java:715)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:45.941481Z","level":"error","event":"\tat com.amazonaws.http.AmazonHttpClient$RequestExecutionBuilderImpl.execute(AmazonHttpClient.java:697)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:45.941842Z","level":"error","event":"\tat com.amazonaws.http.AmazonHttpClient.execute(AmazonHttpClient.java:561)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:45.942126Z","level":"error","event":"\tat com.amazonaws.http.AmazonHttpClient.execute(AmazonHttpClient.java:541)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:45.942389Z","level":"error","event":"\tat com.amazonaws.services.s3.AmazonS3Client.invoke(AmazonS3Client.java:5520)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:45.942668Z","level":"error","event":"\tat com.amazonaws.services.s3.AmazonS3Client.invoke(AmazonS3Client.java:5467)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:45.943400Z","level":"error","event":"\tat com.amazonaws.services.s3.AmazonS3Client.getObjectMetadata(AmazonS3Client.java:1402)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:45.943776Z","level":"error","event":"\tat org.apache.hadoop.fs.s3a.S3AFileSystem.lambda$getObjectMetadata$10(S3AFileSystem.java:2545)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:45.944060Z","level":"error","event":"\tat org.apache.hadoop.fs.s3a.Invoker.retryUntranslated(Invoker.java:414)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:45.944373Z","level":"error","event":"\tat org.apache.hadoop.fs.s3a.Invoker.retryUntranslated(Invoker.java:377)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:45.944627Z","level":"error","event":"\tat org.apache.hadoop.fs.s3a.S3AFileSystem.getObjectMetadata(S3AFileSystem.java:2533)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:45.944894Z","level":"error","event":"\tat org.apache.hadoop.fs.s3a.S3AFileSystem.getObjectMetadata(S3AFileSystem.java:2513)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:45.945143Z","level":"error","event":"\tat org.apache.hadoop.fs.s3a.S3AFileSystem.s3GetFileStatus(S3AFileSystem.java:3776)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:45.945354Z","level":"error","event":"\t... 120 more","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:47.042618Z","level":"error","event":"25/07/14 09:07:47 WARN DeltaLog: s3a://activefence-bucket/bbc_tech/silver/_delta_log/_last_checkpoint is corrupted. Will search the checkpoint files directly","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:47.043250Z","level":"error","event":"java.nio.file.AccessDeniedException: s3a://activefence-bucket/bbc_tech/silver/_delta_log/_last_checkpoint: getFileStatus on s3a://activefence-bucket/bbc_tech/silver/_delta_log/_last_checkpoint: com.amazonaws.services.s3.model.AmazonS3Exception: Forbidden (Service: Amazon S3; Status Code: 403; Error Code: 403 Forbidden; Request ID: 185212F94A3F787A; S3 Extended Request ID: dd9025bab4ad464b049177c95eb6ebf374d3b3fd1af9251148b658df7ac2e3e8; Proxy: null), S3 Extended Request ID: dd9025bab4ad464b049177c95eb6ebf374d3b3fd1af9251148b658df7ac2e3e8:403 Forbidden","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:47.043782Z","level":"error","event":"\tat org.apache.hadoop.fs.s3a.S3AUtils.translateException(S3AUtils.java:255)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:47.044183Z","level":"error","event":"\tat org.apache.hadoop.fs.s3a.S3AUtils.translateException(S3AUtils.java:175)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:47.044518Z","level":"error","event":"\tat org.apache.hadoop.fs.s3a.S3AFileSystem.s3GetFileStatus(S3AFileSystem.java:3796)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:47.044917Z","level":"error","event":"\tat org.apache.hadoop.fs.s3a.S3AFileSystem.innerGetFileStatus(S3AFileSystem.java:3688)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:47.045220Z","level":"error","event":"\tat org.apache.hadoop.fs.s3a.S3AFileSystem.extractOrFetchSimpleFileStatus(S3AFileSystem.java:5401)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:47.045488Z","level":"error","event":"\tat org.apache.hadoop.fs.s3a.S3AFileSystem.open(S3AFileSystem.java:1465)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:47.045794Z","level":"error","event":"\tat org.apache.hadoop.fs.s3a.S3AFileSystem.open(S3AFileSystem.java:1441)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:47.046038Z","level":"error","event":"\tat org.apache.hadoop.fs.FileSystem.open(FileSystem.java:976)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:47.046381Z","level":"error","event":"\tat io.delta.storage.HadoopFileSystemLogStore.read(HadoopFileSystemLogStore.java:46)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:47.046827Z","level":"error","event":"\tat org.apache.spark.sql.delta.storage.LogStoreAdaptor.read(LogStore.scala:412)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:47.047578Z","level":"error","event":"\tat org.apache.spark.sql.delta.storage.DelegatingLogStore.read(DelegatingLogStore.scala:96)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:47.048149Z","level":"error","event":"\tat org.apache.spark.sql.delta.Checkpoints.$anonfun$loadMetadataFromFile$1(Checkpoints.scala:361)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:47.048622Z","level":"error","event":"\tat org.apache.spark.sql.delta.metering.DeltaLogging.recordFrameProfile(DeltaLogging.scala:140)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:47.048991Z","level":"error","event":"\tat org.apache.spark.sql.delta.metering.DeltaLogging.recordFrameProfile$(DeltaLogging.scala:138)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:47.049316Z","level":"error","event":"\tat org.apache.spark.sql.delta.DeltaLog.recordFrameProfile(DeltaLog.scala:72)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:47.049613Z","level":"error","event":"\tat org.apache.spark.sql.delta.metering.DeltaLogging.$anonfun$recordDeltaOperationInternal$1(DeltaLogging.scala:133)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:47.049851Z","level":"error","event":"\tat com.databricks.spark.util.DatabricksLogging.recordOperation(DatabricksLogging.scala:128)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:47.050147Z","level":"error","event":"\tat com.databricks.spark.util.DatabricksLogging.recordOperation$(DatabricksLogging.scala:117)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:47.050438Z","level":"error","event":"\tat org.apache.spark.sql.delta.DeltaLog.recordOperation(DeltaLog.scala:72)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:47.050683Z","level":"error","event":"\tat org.apache.spark.sql.delta.metering.DeltaLogging.recordDeltaOperationInternal(DeltaLogging.scala:132)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:47.050936Z","level":"error","event":"\tat org.apache.spark.sql.delta.metering.DeltaLogging.recordDeltaOperation(DeltaLogging.scala:122)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:47.051189Z","level":"error","event":"\tat org.apache.spark.sql.delta.metering.DeltaLogging.recordDeltaOperation$(DeltaLogging.scala:112)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:47.051492Z","level":"error","event":"\tat org.apache.spark.sql.delta.DeltaLog.recordDeltaOperation(DeltaLog.scala:72)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:47.051880Z","level":"error","event":"\tat org.apache.spark.sql.delta.Checkpoints.loadMetadataFromFile(Checkpoints.scala:360)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:47.052220Z","level":"error","event":"\tat org.apache.spark.sql.delta.Checkpoints.$anonfun$loadMetadataFromFile$1(Checkpoints.scala:371)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:47.052722Z","level":"error","event":"\tat org.apache.spark.sql.delta.metering.DeltaLogging.recordFrameProfile(DeltaLogging.scala:140)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:47.053112Z","level":"error","event":"\tat org.apache.spark.sql.delta.metering.DeltaLogging.recordFrameProfile$(DeltaLogging.scala:138)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:47.053535Z","level":"error","event":"\tat org.apache.spark.sql.delta.DeltaLog.recordFrameProfile(DeltaLog.scala:72)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:47.053902Z","level":"error","event":"\tat org.apache.spark.sql.delta.metering.DeltaLogging.$anonfun$recordDeltaOperationInternal$1(DeltaLogging.scala:133)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:47.054308Z","level":"error","event":"\tat com.databricks.spark.util.DatabricksLogging.recordOperation(DatabricksLogging.scala:128)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:47.054667Z","level":"error","event":"\tat com.databricks.spark.util.DatabricksLogging.recordOperation$(DatabricksLogging.scala:117)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:47.055254Z","level":"error","event":"\tat org.apache.spark.sql.delta.DeltaLog.recordOperation(DeltaLog.scala:72)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:47.055682Z","level":"error","event":"\tat org.apache.spark.sql.delta.metering.DeltaLogging.recordDeltaOperationInternal(DeltaLogging.scala:132)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:47.056124Z","level":"error","event":"\tat org.apache.spark.sql.delta.metering.DeltaLogging.recordDeltaOperation(DeltaLogging.scala:122)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:47.056501Z","level":"error","event":"\tat org.apache.spark.sql.delta.metering.DeltaLogging.recordDeltaOperation$(DeltaLogging.scala:112)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:47.056870Z","level":"error","event":"\tat org.apache.spark.sql.delta.DeltaLog.recordDeltaOperation(DeltaLog.scala:72)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:47.057249Z","level":"error","event":"\tat org.apache.spark.sql.delta.Checkpoints.loadMetadataFromFile(Checkpoints.scala:360)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:47.057728Z","level":"error","event":"\tat org.apache.spark.sql.delta.Checkpoints.$anonfun$loadMetadataFromFile$1(Checkpoints.scala:371)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:47.058203Z","level":"error","event":"\tat org.apache.spark.sql.delta.metering.DeltaLogging.recordFrameProfile(DeltaLogging.scala:140)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:47.058676Z","level":"error","event":"\tat org.apache.spark.sql.delta.metering.DeltaLogging.recordFrameProfile$(DeltaLogging.scala:138)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:47.059045Z","level":"error","event":"\tat org.apache.spark.sql.delta.DeltaLog.recordFrameProfile(DeltaLog.scala:72)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:47.059424Z","level":"error","event":"\tat org.apache.spark.sql.delta.metering.DeltaLogging.$anonfun$recordDeltaOperationInternal$1(DeltaLogging.scala:133)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:47.059882Z","level":"error","event":"\tat com.databricks.spark.util.DatabricksLogging.recordOperation(DatabricksLogging.scala:128)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:47.060222Z","level":"error","event":"\tat com.databricks.spark.util.DatabricksLogging.recordOperation$(DatabricksLogging.scala:117)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:47.060568Z","level":"error","event":"\tat org.apache.spark.sql.delta.DeltaLog.recordOperation(DeltaLog.scala:72)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:47.060999Z","level":"error","event":"\tat org.apache.spark.sql.delta.metering.DeltaLogging.recordDeltaOperationInternal(DeltaLogging.scala:132)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:47.061532Z","level":"error","event":"\tat org.apache.spark.sql.delta.metering.DeltaLogging.recordDeltaOperation(DeltaLogging.scala:122)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:47.062010Z","level":"error","event":"\tat org.apache.spark.sql.delta.metering.DeltaLogging.recordDeltaOperation$(DeltaLogging.scala:112)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:47.062400Z","level":"error","event":"\tat org.apache.spark.sql.delta.DeltaLog.recordDeltaOperation(DeltaLog.scala:72)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:47.063018Z","level":"error","event":"\tat org.apache.spark.sql.delta.Checkpoints.loadMetadataFromFile(Checkpoints.scala:360)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:47.063570Z","level":"error","event":"\tat org.apache.spark.sql.delta.Checkpoints.$anonfun$loadMetadataFromFile$1(Checkpoints.scala:371)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:47.063983Z","level":"error","event":"\tat org.apache.spark.sql.delta.metering.DeltaLogging.recordFrameProfile(DeltaLogging.scala:140)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:47.064505Z","level":"error","event":"\tat org.apache.spark.sql.delta.metering.DeltaLogging.recordFrameProfile$(DeltaLogging.scala:138)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:47.064969Z","level":"error","event":"\tat org.apache.spark.sql.delta.DeltaLog.recordFrameProfile(DeltaLog.scala:72)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:47.065347Z","level":"error","event":"\tat org.apache.spark.sql.delta.metering.DeltaLogging.$anonfun$recordDeltaOperationInternal$1(DeltaLogging.scala:133)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:47.065767Z","level":"error","event":"\tat com.databricks.spark.util.DatabricksLogging.recordOperation(DatabricksLogging.scala:128)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:47.066166Z","level":"error","event":"\tat com.databricks.spark.util.DatabricksLogging.recordOperation$(DatabricksLogging.scala:117)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:47.066856Z","level":"error","event":"\tat org.apache.spark.sql.delta.DeltaLog.recordOperation(DeltaLog.scala:72)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:47.067379Z","level":"error","event":"\tat org.apache.spark.sql.delta.metering.DeltaLogging.recordDeltaOperationInternal(DeltaLogging.scala:132)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:47.067843Z","level":"error","event":"\tat org.apache.spark.sql.delta.metering.DeltaLogging.recordDeltaOperation(DeltaLogging.scala:122)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:47.068204Z","level":"error","event":"\tat org.apache.spark.sql.delta.metering.DeltaLogging.recordDeltaOperation$(DeltaLogging.scala:112)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:47.068887Z","level":"error","event":"\tat org.apache.spark.sql.delta.DeltaLog.recordDeltaOperation(DeltaLog.scala:72)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:47.069392Z","level":"error","event":"\tat org.apache.spark.sql.delta.Checkpoints.loadMetadataFromFile(Checkpoints.scala:360)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:47.070379Z","level":"error","event":"\tat org.apache.spark.sql.delta.Checkpoints.readLastCheckpointFile(Checkpoints.scala:354)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:47.070821Z","level":"error","event":"\tat org.apache.spark.sql.delta.Checkpoints.readLastCheckpointFile$(Checkpoints.scala:353)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:47.071308Z","level":"error","event":"\tat org.apache.spark.sql.delta.DeltaLog.readLastCheckpointFile(DeltaLog.scala:72)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:47.071789Z","level":"error","event":"\tat org.apache.spark.sql.delta.SnapshotManagement.$anonfun$getSnapshotAtInit$1(SnapshotManagement.scala:436)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:47.072180Z","level":"error","event":"\tat org.apache.spark.sql.delta.metering.DeltaLogging.recordFrameProfile(DeltaLogging.scala:140)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:47.072567Z","level":"error","event":"\tat org.apache.spark.sql.delta.metering.DeltaLogging.recordFrameProfile$(DeltaLogging.scala:138)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:47.072936Z","level":"error","event":"\tat org.apache.spark.sql.delta.DeltaLog.recordFrameProfile(DeltaLog.scala:72)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:47.073451Z","level":"error","event":"\tat org.apache.spark.sql.delta.SnapshotManagement.getSnapshotAtInit(SnapshotManagement.scala:434)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:47.073887Z","level":"error","event":"\tat org.apache.spark.sql.delta.SnapshotManagement.getSnapshotAtInit$(SnapshotManagement.scala:433)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:47.074562Z","level":"error","event":"\tat org.apache.spark.sql.delta.DeltaLog.getSnapshotAtInit(DeltaLog.scala:72)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:47.075041Z","level":"error","event":"\tat org.apache.spark.sql.delta.SnapshotManagement.$init$(SnapshotManagement.scala:60)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:47.075410Z","level":"error","event":"\tat org.apache.spark.sql.delta.DeltaLog.<init>(DeltaLog.scala:78)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:47.075800Z","level":"error","event":"\tat org.apache.spark.sql.delta.DeltaLog$.$anonfun$apply$4(DeltaLog.scala:779)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:47.076510Z","level":"error","event":"\tat org.apache.spark.sql.catalyst.plans.logical.AnalysisHelper$.allowInvokingTransformsInAnalyzer(AnalysisHelper.scala:323)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:47.077037Z","level":"error","event":"\tat org.apache.spark.sql.delta.DeltaLog$.$anonfun$apply$3(DeltaLog.scala:774)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:47.077534Z","level":"error","event":"\tat org.apache.spark.sql.delta.metering.DeltaLogging.recordFrameProfile(DeltaLogging.scala:140)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:47.078008Z","level":"error","event":"\tat org.apache.spark.sql.delta.metering.DeltaLogging.recordFrameProfile$(DeltaLogging.scala:138)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:47.078411Z","level":"error","event":"\tat org.apache.spark.sql.delta.DeltaLog$.recordFrameProfile(DeltaLog.scala:598)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:47.078857Z","level":"error","event":"\tat org.apache.spark.sql.delta.metering.DeltaLogging.$anonfun$recordDeltaOperationInternal$1(DeltaLogging.scala:133)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:47.079260Z","level":"error","event":"\tat com.databricks.spark.util.DatabricksLogging.recordOperation(DatabricksLogging.scala:128)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:47.079703Z","level":"error","event":"\tat com.databricks.spark.util.DatabricksLogging.recordOperation$(DatabricksLogging.scala:117)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:47.080018Z","level":"error","event":"\tat org.apache.spark.sql.delta.DeltaLog$.recordOperation(DeltaLog.scala:598)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:47.080324Z","level":"error","event":"\tat org.apache.spark.sql.delta.metering.DeltaLogging.recordDeltaOperationInternal(DeltaLogging.scala:132)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:47.080684Z","level":"error","event":"\tat org.apache.spark.sql.delta.metering.DeltaLogging.recordDeltaOperation(DeltaLogging.scala:122)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:47.081109Z","level":"error","event":"\tat org.apache.spark.sql.delta.metering.DeltaLogging.recordDeltaOperation$(DeltaLogging.scala:112)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:47.081526Z","level":"error","event":"\tat org.apache.spark.sql.delta.DeltaLog$.recordDeltaOperation(DeltaLog.scala:598)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:47.082083Z","level":"error","event":"\tat org.apache.spark.sql.delta.DeltaLog$.createDeltaLog$1(DeltaLog.scala:773)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:47.082961Z","level":"error","event":"\tat org.apache.spark.sql.delta.DeltaLog$.$anonfun$apply$5(DeltaLog.scala:791)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:47.083363Z","level":"error","event":"\tat com.google.common.cache.LocalCache$LocalManualCache$1.load(LocalCache.java:4792)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:47.083751Z","level":"error","event":"\tat com.google.common.cache.LocalCache$LoadingValueReference.loadFuture(LocalCache.java:3599)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:47.084278Z","level":"error","event":"\tat com.google.common.cache.LocalCache$Segment.loadSync(LocalCache.java:2379)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:47.084624Z","level":"error","event":"\tat com.google.common.cache.LocalCache$Segment.lockedGetOrLoad(LocalCache.java:2342)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:47.085066Z","level":"error","event":"\tat com.google.common.cache.LocalCache$Segment.get(LocalCache.java:2257)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:47.085431Z","level":"error","event":"\tat com.google.common.cache.LocalCache.get(LocalCache.java:4000)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:47.085796Z","level":"error","event":"\tat com.google.common.cache.LocalCache$LocalManualCache.get(LocalCache.java:4789)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:47.086299Z","level":"error","event":"\tat org.apache.spark.sql.delta.DeltaLog$.getDeltaLogFromCache$1(DeltaLog.scala:790)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:47.086719Z","level":"error","event":"\tat org.apache.spark.sql.delta.DeltaLog$.apply(DeltaLog.scala:800)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:47.087066Z","level":"error","event":"\tat org.apache.spark.sql.delta.DeltaLog$.forTable(DeltaLog.scala:677)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:47.087449Z","level":"error","event":"\tat org.apache.spark.sql.delta.catalog.DeltaTableV2.$anonfun$deltaLog$1(DeltaTableV2.scala:91)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:47.088040Z","level":"error","event":"\tat org.apache.spark.sql.delta.catalog.DeltaTableV2$.withEnrichedUnsupportedTableException(DeltaTableV2.scala:364)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:47.088435Z","level":"error","event":"\tat org.apache.spark.sql.delta.catalog.DeltaTableV2.deltaLog$lzycompute(DeltaTableV2.scala:91)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:47.088843Z","level":"error","event":"\tat org.apache.spark.sql.delta.catalog.DeltaTableV2.deltaLog(DeltaTableV2.scala:89)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:47.089212Z","level":"error","event":"\tat org.apache.spark.sql.delta.catalog.DeltaTableV2.$anonfun$initialSnapshot$4(DeltaTableV2.scala:144)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:47.089603Z","level":"error","event":"\tat scala.Option.getOrElse(Option.scala:189)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:47.090146Z","level":"error","event":"\tat org.apache.spark.sql.delta.catalog.DeltaTableV2.$anonfun$initialSnapshot$1(DeltaTableV2.scala:144)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:47.090655Z","level":"error","event":"\tat org.apache.spark.sql.delta.catalog.DeltaTableV2$.withEnrichedUnsupportedTableException(DeltaTableV2.scala:364)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:47.091117Z","level":"error","event":"\tat org.apache.spark.sql.delta.catalog.DeltaTableV2.initialSnapshot$lzycompute(DeltaTableV2.scala:143)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:47.091560Z","level":"error","event":"\tat org.apache.spark.sql.delta.catalog.DeltaTableV2.initialSnapshot(DeltaTableV2.scala:123)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:47.092055Z","level":"error","event":"\tat org.apache.spark.sql.delta.catalog.DeltaTableV2.toBaseRelation$lzycompute(DeltaTableV2.scala:235)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:47.092395Z","level":"error","event":"\tat org.apache.spark.sql.delta.catalog.DeltaTableV2.toBaseRelation(DeltaTableV2.scala:233)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:47.092749Z","level":"error","event":"\tat org.apache.spark.sql.delta.sources.DeltaDataSource.$anonfun$createRelation$5(DeltaDataSource.scala:250)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:47.093210Z","level":"error","event":"\tat org.apache.spark.sql.delta.metering.DeltaLogging.recordFrameProfile(DeltaLogging.scala:140)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:47.093710Z","level":"error","event":"\tat org.apache.spark.sql.delta.metering.DeltaLogging.recordFrameProfile$(DeltaLogging.scala:138)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:47.094115Z","level":"error","event":"\tat org.apache.spark.sql.delta.sources.DeltaDataSource.recordFrameProfile(DeltaDataSource.scala:49)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:47.094456Z","level":"error","event":"\tat org.apache.spark.sql.delta.sources.DeltaDataSource.createRelation(DeltaDataSource.scala:209)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:47.094800Z","level":"error","event":"\tat org.apache.spark.sql.execution.datasources.DataSource.resolveRelation(DataSource.scala:346)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:47.095229Z","level":"error","event":"\tat org.apache.spark.sql.DataFrameReader.loadV1Source(DataFrameReader.scala:229)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:47.095685Z","level":"error","event":"\tat org.apache.spark.sql.DataFrameReader.$anonfun$load$2(DataFrameReader.scala:211)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:47.096166Z","level":"error","event":"\tat scala.Option.getOrElse(Option.scala:189)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:47.096559Z","level":"error","event":"\tat org.apache.spark.sql.DataFrameReader.load(DataFrameReader.scala:211)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:47.096961Z","level":"error","event":"\tat org.apache.spark.sql.DataFrameReader.load(DataFrameReader.scala:186)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:47.097403Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:47.097717Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:47.098088Z","level":"error","event":"\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:47.098487Z","level":"error","event":"\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:47.098870Z","level":"error","event":"\tat py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:47.099216Z","level":"error","event":"\tat py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:47.099572Z","level":"error","event":"\tat py4j.Gateway.invoke(Gateway.java:282)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:47.099919Z","level":"error","event":"\tat py4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:47.100239Z","level":"error","event":"\tat py4j.commands.CallCommand.execute(CallCommand.java:79)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:47.100559Z","level":"error","event":"\tat py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:47.100895Z","level":"error","event":"\tat py4j.ClientServerConnection.run(ClientServerConnection.java:106)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:47.101227Z","level":"error","event":"\tat java.base/java.lang.Thread.run(Thread.java:840)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:47.101605Z","level":"error","event":"Caused by: com.amazonaws.services.s3.model.AmazonS3Exception: Forbidden (Service: Amazon S3; Status Code: 403; Error Code: 403 Forbidden; Request ID: 185212F94A3F787A; S3 Extended Request ID: dd9025bab4ad464b049177c95eb6ebf374d3b3fd1af9251148b658df7ac2e3e8; Proxy: null), S3 Extended Request ID: dd9025bab4ad464b049177c95eb6ebf374d3b3fd1af9251148b658df7ac2e3e8","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:47.101988Z","level":"error","event":"\tat com.amazonaws.http.AmazonHttpClient$RequestExecutor.handleErrorResponse(AmazonHttpClient.java:1879)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:47.102340Z","level":"error","event":"\tat com.amazonaws.http.AmazonHttpClient$RequestExecutor.handleServiceErrorResponse(AmazonHttpClient.java:1418)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:47.102839Z","level":"error","event":"\tat com.amazonaws.http.AmazonHttpClient$RequestExecutor.executeOneRequest(AmazonHttpClient.java:1387)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:47.103140Z","level":"error","event":"\tat com.amazonaws.http.AmazonHttpClient$RequestExecutor.executeHelper(AmazonHttpClient.java:1157)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:47.103432Z","level":"error","event":"\tat com.amazonaws.http.AmazonHttpClient$RequestExecutor.doExecute(AmazonHttpClient.java:814)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:47.103766Z","level":"error","event":"\tat com.amazonaws.http.AmazonHttpClient$RequestExecutor.executeWithTimer(AmazonHttpClient.java:781)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:47.104058Z","level":"error","event":"\tat com.amazonaws.http.AmazonHttpClient$RequestExecutor.execute(AmazonHttpClient.java:755)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:47.104315Z","level":"error","event":"\tat com.amazonaws.http.AmazonHttpClient$RequestExecutor.access$500(AmazonHttpClient.java:715)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:47.104579Z","level":"error","event":"\tat com.amazonaws.http.AmazonHttpClient$RequestExecutionBuilderImpl.execute(AmazonHttpClient.java:697)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:47.104960Z","level":"error","event":"\tat com.amazonaws.http.AmazonHttpClient.execute(AmazonHttpClient.java:561)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:47.105257Z","level":"error","event":"\tat com.amazonaws.http.AmazonHttpClient.execute(AmazonHttpClient.java:541)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:47.105542Z","level":"error","event":"\tat com.amazonaws.services.s3.AmazonS3Client.invoke(AmazonS3Client.java:5520)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:47.105796Z","level":"error","event":"\tat com.amazonaws.services.s3.AmazonS3Client.invoke(AmazonS3Client.java:5467)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:47.106158Z","level":"error","event":"\tat com.amazonaws.services.s3.AmazonS3Client.getObjectMetadata(AmazonS3Client.java:1402)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:47.106499Z","level":"error","event":"\tat org.apache.hadoop.fs.s3a.S3AFileSystem.lambda$getObjectMetadata$10(S3AFileSystem.java:2545)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:47.106842Z","level":"error","event":"\tat org.apache.hadoop.fs.s3a.Invoker.retryUntranslated(Invoker.java:414)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:47.107107Z","level":"error","event":"\tat org.apache.hadoop.fs.s3a.Invoker.retryUntranslated(Invoker.java:377)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:47.107381Z","level":"error","event":"\tat org.apache.hadoop.fs.s3a.S3AFileSystem.getObjectMetadata(S3AFileSystem.java:2533)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:47.107700Z","level":"error","event":"\tat org.apache.hadoop.fs.s3a.S3AFileSystem.getObjectMetadata(S3AFileSystem.java:2513)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:47.107981Z","level":"error","event":"\tat org.apache.hadoop.fs.s3a.S3AFileSystem.s3GetFileStatus(S3AFileSystem.java:3776)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:47.108228Z","level":"error","event":"\t... 133 more","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:47.286876","level":"error","event":"Error processing Delta table: An error occurred while calling o46.load.\n: java.nio.file.AccessDeniedException: s3a://activefence-bucket/bbc_tech/silver/_delta_log: getFileStatus on s3a://activefence-bucket/bbc_tech/silver/_delta_log: com.amazonaws.services.s3.model.AmazonS3Exception: Forbidden (Service: Amazon S3; Status Code: 403; Error Code: 403 Forbidden; Request ID: 185212F9533E6B75; S3 Extended Request ID: dd9025bab4ad464b049177c95eb6ebf374d3b3fd1af9251148b658df7ac2e3e8; Proxy: null), S3 Extended Request ID: dd9025bab4ad464b049177c95eb6ebf374d3b3fd1af9251148b658df7ac2e3e8:403 Forbidden\n\tat org.apache.hadoop.fs.s3a.S3AUtils.translateException(S3AUtils.java:255)\n\tat org.apache.hadoop.fs.s3a.S3AUtils.translateException(S3AUtils.java:175)\n\tat org.apache.hadoop.fs.s3a.S3AFileSystem.s3GetFileStatus(S3AFileSystem.java:3796)\n\tat org.apache.hadoop.fs.s3a.S3AFileSystem.innerGetFileStatus(S3AFileSystem.java:3688)\n\tat org.apache.hadoop.fs.s3a.S3AFileSystem.lambda$exists$34(S3AFileSystem.java:4703)\n\tat org.apache.hadoop.fs.statistics.impl.IOStatisticsBinding.lambda$trackDurationOfOperation$5(IOStatisticsBinding.java:499)\n\tat org.apache.hadoop.fs.statistics.impl.IOStatisticsBinding.trackDuration(IOStatisticsBinding.java:444)\n\tat org.apache.hadoop.fs.s3a.S3AFileSystem.trackDurationAndSpan(S3AFileSystem.java:2337)\n\tat org.apache.hadoop.fs.s3a.S3AFileSystem.trackDurationAndSpan(S3AFileSystem.java:2356)\n\tat org.apache.hadoop.fs.s3a.S3AFileSystem.exists(S3AFileSystem.java:4701)\n\tat io.delta.storage.S3SingleDriverLogStore.listFromInternal(S3SingleDriverLogStore.java:201)\n\tat io.delta.storage.S3SingleDriverLogStore.listFrom(S3SingleDriverLogStore.java:306)\n\tat org.apache.spark.sql.delta.storage.LogStoreAdaptor.listFrom(LogStore.scala:452)\n\tat org.apache.spark.sql.delta.storage.DelegatingLogStore.listFrom(DelegatingLogStore.scala:127)\n\tat org.apache.spark.sql.delta.Checkpoints.findLastCompleteCheckpointBefore(Checkpoints.scala:428)\n\tat org.apache.spark.sql.delta.Checkpoints.findLastCompleteCheckpointBefore$(Checkpoints.scala:416)\n\tat org.apache.spark.sql.delta.DeltaLog.findLastCompleteCheckpointBefore(DeltaLog.scala:72)\n\tat org.apache.spark.sql.delta.Checkpoints.$anonfun$loadMetadataFromFile$1(Checkpoints.scala:383)\n\tat org.apache.spark.sql.delta.metering.DeltaLogging.recordFrameProfile(DeltaLogging.scala:140)\n\tat org.apache.spark.sql.delta.metering.DeltaLogging.recordFrameProfile$(DeltaLogging.scala:138)\n\tat org.apache.spark.sql.delta.DeltaLog.recordFrameProfile(DeltaLog.scala:72)\n\tat org.apache.spark.sql.delta.metering.DeltaLogging.$anonfun$recordDeltaOperationInternal$1(DeltaLogging.scala:133)\n\tat com.databricks.spark.util.DatabricksLogging.recordOperation(DatabricksLogging.scala:128)\n\tat com.databricks.spark.util.DatabricksLogging.recordOperation$(DatabricksLogging.scala:117)\n\tat org.apache.spark.sql.delta.DeltaLog.recordOperation(DeltaLog.scala:72)\n\tat org.apache.spark.sql.delta.metering.DeltaLogging.recordDeltaOperationInternal(DeltaLogging.scala:132)\n\tat org.apache.spark.sql.delta.metering.DeltaLogging.recordDeltaOperation(DeltaLogging.scala:122)\n\tat org.apache.spark.sql.delta.metering.DeltaLogging.recordDeltaOperation$(DeltaLogging.scala:112)\n\tat org.apache.spark.sql.delta.DeltaLog.recordDeltaOperation(DeltaLog.scala:72)\n\tat org.apache.spark.sql.delta.Checkpoints.loadMetadataFromFile(Checkpoints.scala:360)\n\tat org.apache.spark.sql.delta.Checkpoints.$anonfun$loadMetadataFromFile$1(Checkpoints.scala:371)\n\tat org.apache.spark.sql.delta.metering.DeltaLogging.recordFrameProfile(DeltaLogging.scala:140)\n\tat org.apache.spark.sql.delta.metering.DeltaLogging.recordFrameProfile$(DeltaLogging.scala:138)\n\tat org.apache.spark.sql.delta.DeltaLog.recordFrameProfile(DeltaLog.scala:72)\n\tat org.apache.spark.sql.delta.metering.DeltaLogging.$anonfun$recordDeltaOperationInternal$1(DeltaLogging.scala:133)\n\tat com.databricks.spark.util.DatabricksLogging.recordOperation(DatabricksLogging.scala:128)\n\tat com.databricks.spark.util.DatabricksLogging.recordOperation$(DatabricksLogging.scala:117)\n\tat org.apache.spark.sql.delta.DeltaLog.recordOperation(DeltaLog.scala:72)\n\tat org.apache.spark.sql.delta.metering.DeltaLogging.recordDeltaOperationInternal(DeltaLogging.scala:132)\n\tat org.apache.spark.sql.delta.metering.DeltaLogging.recordDeltaOperation(DeltaLogging.scala:122)\n\tat org.apache.spark.sql.delta.metering.DeltaLogging.recordDeltaOperation$(DeltaLogging.scala:112)\n\tat org.apache.spark.sql.delta.DeltaLog.recordDeltaOperation(DeltaLog.scala:72)\n\tat org.apache.spark.sql.delta.Checkpoints.loadMetadataFromFile(Checkpoints.scala:360)\n\tat org.apache.spark.sql.delta.Checkpoints.$anonfun$loadMetadataFromFile$1(Checkpoints.scala:371)\n\tat org.apache.spark.sql.delta.metering.DeltaLogging.recordFrameProfile(DeltaLogging.scala:140)\n\tat org.apache.spark.sql.delta.metering.DeltaLogging.recordFrameProfile$(DeltaLogging.scala:138)\n\tat org.apache.spark.sql.delta.DeltaLog.recordFrameProfile(DeltaLog.scala:72)\n\tat org.apache.spark.sql.delta.metering.DeltaLogging.$anonfun$recordDeltaOperationInternal$1(DeltaLogging.scala:133)\n\tat com.databricks.spark.util.DatabricksLogging.recordOperation(DatabricksLogging.scala:128)\n\tat com.databricks.spark.util.DatabricksLogging.recordOperation$(DatabricksLogging.scala:117)\n\tat org.apache.spark.sql.delta.DeltaLog.recordOperation(DeltaLog.scala:72)\n\tat org.apache.spark.sql.delta.metering.DeltaLogging.recordDeltaOperationInternal(DeltaLogging.scala:132)\n\tat org.apache.spark.sql.delta.metering.DeltaLogging.recordDeltaOperation(DeltaLogging.scala:122)\n\tat org.apache.spark.sql.delta.metering.DeltaLogging.recordDeltaOperation$(DeltaLogging.scala:112)\n\tat org.apache.spark.sql.delta.DeltaLog.recordDeltaOperation(DeltaLog.scala:72)\n\tat org.apache.spark.sql.delta.Checkpoints.loadMetadataFromFile(Checkpoints.scala:360)\n\tat org.apache.spark.sql.delta.Checkpoints.$anonfun$loadMetadataFromFile$1(Checkpoints.scala:371)\n\tat org.apache.spark.sql.delta.metering.DeltaLogging.recordFrameProfile(DeltaLogging.scala:140)\n\tat org.apache.spark.sql.delta.metering.DeltaLogging.recordFrameProfile$(DeltaLogging.scala:138)\n\tat org.apache.spark.sql.delta.DeltaLog.recordFrameProfile(DeltaLog.scala:72)\n\tat org.apache.spark.sql.delta.metering.DeltaLogging.$anonfun$recordDeltaOperationInternal$1(DeltaLogging.scala:133)\n\tat com.databricks.spark.util.DatabricksLogging.recordOperation(DatabricksLogging.scala:128)\n\tat com.databricks.spark.util.DatabricksLogging.recordOperation$(DatabricksLogging.scala:117)\n\tat org.apache.spark.sql.delta.DeltaLog.recordOperation(DeltaLog.scala:72)\n\tat org.apache.spark.sql.delta.metering.DeltaLogging.recordDeltaOperationInternal(DeltaLogging.scala:132)\n\tat org.apache.spark.sql.delta.metering.DeltaLogging.recordDeltaOperation(DeltaLogging.scala:122)\n\tat org.apache.spark.sql.delta.metering.DeltaLogging.recordDeltaOperation$(DeltaLogging.scala:112)\n\tat org.apache.spark.sql.delta.DeltaLog.recordDeltaOperation(DeltaLog.scala:72)\n\tat org.apache.spark.sql.delta.Checkpoints.loadMetadataFromFile(Checkpoints.scala:360)\n\tat org.apache.spark.sql.delta.Checkpoints.readLastCheckpointFile(Checkpoints.scala:354)\n\tat org.apache.spark.sql.delta.Checkpoints.readLastCheckpointFile$(Checkpoints.scala:353)\n\tat org.apache.spark.sql.delta.DeltaLog.readLastCheckpointFile(DeltaLog.scala:72)\n\tat org.apache.spark.sql.delta.SnapshotManagement.$anonfun$getSnapshotAtInit$1(SnapshotManagement.scala:436)\n\tat org.apache.spark.sql.delta.metering.DeltaLogging.recordFrameProfile(DeltaLogging.scala:140)\n\tat org.apache.spark.sql.delta.metering.DeltaLogging.recordFrameProfile$(DeltaLogging.scala:138)\n\tat org.apache.spark.sql.delta.DeltaLog.recordFrameProfile(DeltaLog.scala:72)\n\tat org.apache.spark.sql.delta.SnapshotManagement.getSnapshotAtInit(SnapshotManagement.scala:434)\n\tat org.apache.spark.sql.delta.SnapshotManagement.getSnapshotAtInit$(SnapshotManagement.scala:433)\n\tat org.apache.spark.sql.delta.DeltaLog.getSnapshotAtInit(DeltaLog.scala:72)\n\tat org.apache.spark.sql.delta.SnapshotManagement.$init$(SnapshotManagement.scala:60)\n\tat org.apache.spark.sql.delta.DeltaLog.<init>(DeltaLog.scala:78)\n\tat org.apache.spark.sql.delta.DeltaLog$.$anonfun$apply$4(DeltaLog.scala:779)\n\tat org.apache.spark.sql.catalyst.plans.logical.AnalysisHelper$.allowInvokingTransformsInAnalyzer(AnalysisHelper.scala:323)\n\tat org.apache.spark.sql.delta.DeltaLog$.$anonfun$apply$3(DeltaLog.scala:774)\n\tat org.apache.spark.sql.delta.metering.DeltaLogging.recordFrameProfile(DeltaLogging.scala:140)\n\tat org.apache.spark.sql.delta.metering.DeltaLogging.recordFrameProfile$(DeltaLogging.scala:138)\n\tat org.apache.spark.sql.delta.DeltaLog$.recordFrameProfile(DeltaLog.scala:598)\n\tat org.apache.spark.sql.delta.metering.DeltaLogging.$anonfun$recordDeltaOperationInternal$1(DeltaLogging.scala:133)\n\tat com.databricks.spark.util.DatabricksLogging.recordOperation(DatabricksLogging.scala:128)\n\tat com.databricks.spark.util.DatabricksLogging.recordOperation$(DatabricksLogging.scala:117)\n\tat org.apache.spark.sql.delta.DeltaLog$.recordOperation(DeltaLog.scala:598)\n\tat org.apache.spark.sql.delta.metering.DeltaLogging.recordDeltaOperationInternal(DeltaLogging.scala:132)\n\tat org.apache.spark.sql.delta.metering.DeltaLogging.recordDeltaOperation(DeltaLogging.scala:122)\n\tat org.apache.spark.sql.delta.metering.DeltaLogging.recordDeltaOperation$(DeltaLogging.scala:112)\n\tat org.apache.spark.sql.delta.DeltaLog$.recordDeltaOperation(DeltaLog.scala:598)\n\tat org.apache.spark.sql.delta.DeltaLog$.createDeltaLog$1(DeltaLog.scala:773)\n\tat org.apache.spark.sql.delta.DeltaLog$.$anonfun$apply$5(DeltaLog.scala:791)\n\tat com.google.common.cache.LocalCache$LocalManualCache$1.load(LocalCache.java:4792)\n\tat com.google.common.cache.LocalCache$LoadingValueReference.loadFuture(LocalCache.java:3599)\n\tat com.google.common.cache.LocalCache$Segment.loadSync(LocalCache.java:2379)\n\tat com.google.common.cache.LocalCache$Segment.lockedGetOrLoad(LocalCache.java:2342)\n\tat com.google.common.cache.LocalCache$Segment.get(LocalCache.java:2257)\n\tat com.google.common.cache.LocalCache.get(LocalCache.java:4000)\n\tat com.google.common.cache.LocalCache$LocalManualCache.get(LocalCache.java:4789)\n\tat org.apache.spark.sql.delta.DeltaLog$.getDeltaLogFromCache$1(DeltaLog.scala:790)\n\tat org.apache.spark.sql.delta.DeltaLog$.apply(DeltaLog.scala:800)\n\tat org.apache.spark.sql.delta.DeltaLog$.forTable(DeltaLog.scala:677)\n\tat org.apache.spark.sql.delta.catalog.DeltaTableV2.$anonfun$deltaLog$1(DeltaTableV2.scala:91)\n\tat org.apache.spark.sql.delta.catalog.DeltaTableV2$.withEnrichedUnsupportedTableException(DeltaTableV2.scala:364)\n\tat org.apache.spark.sql.delta.catalog.DeltaTableV2.deltaLog$lzycompute(DeltaTableV2.scala:91)\n\tat org.apache.spark.sql.delta.catalog.DeltaTableV2.deltaLog(DeltaTableV2.scala:89)\n\tat org.apache.spark.sql.delta.catalog.DeltaTableV2.$anonfun$initialSnapshot$4(DeltaTableV2.scala:144)\n\tat scala.Option.getOrElse(Option.scala:189)\n\tat org.apache.spark.sql.delta.catalog.DeltaTableV2.$anonfun$initialSnapshot$1(DeltaTableV2.scala:144)\n\tat org.apache.spark.sql.delta.catalog.DeltaTableV2$.withEnrichedUnsupportedTableException(DeltaTableV2.scala:364)\n\tat org.apache.spark.sql.delta.catalog.DeltaTableV2.initialSnapshot$lzycompute(DeltaTableV2.scala:143)\n\tat org.apache.spark.sql.delta.catalog.DeltaTableV2.initialSnapshot(DeltaTableV2.scala:123)\n\tat org.apache.spark.sql.delta.catalog.DeltaTableV2.toBaseRelation$lzycompute(DeltaTableV2.scala:235)\n\tat org.apache.spark.sql.delta.catalog.DeltaTableV2.toBaseRelation(DeltaTableV2.scala:233)\n\tat org.apache.spark.sql.delta.sources.DeltaDataSource.$anonfun$createRelation$5(DeltaDataSource.scala:250)\n\tat org.apache.spark.sql.delta.metering.DeltaLogging.recordFrameProfile(DeltaLogging.scala:140)\n\tat org.apache.spark.sql.delta.metering.DeltaLogging.recordFrameProfile$(DeltaLogging.scala:138)\n\tat org.apache.spark.sql.delta.sources.DeltaDataSource.recordFrameProfile(DeltaDataSource.scala:49)\n\tat org.apache.spark.sql.delta.sources.DeltaDataSource.createRelation(DeltaDataSource.scala:209)\n\tat org.apache.spark.sql.execution.datasources.DataSource.resolveRelation(DataSource.scala:346)\n\tat org.apache.spark.sql.DataFrameReader.loadV1Source(DataFrameReader.scala:229)\n\tat org.apache.spark.sql.DataFrameReader.$anonfun$load$2(DataFrameReader.scala:211)\n\tat scala.Option.getOrElse(Option.scala:189)\n\tat org.apache.spark.sql.DataFrameReader.load(DataFrameReader.scala:211)\n\tat org.apache.spark.sql.DataFrameReader.load(DataFrameReader.scala:186)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\n\tat py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\n\tat py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\n\tat py4j.Gateway.invoke(Gateway.java:282)\n\tat py4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\n\tat py4j.commands.CallCommand.execute(CallCommand.java:79)\n\tat py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\n\tat py4j.ClientServerConnection.run(ClientServerConnection.java:106)\n\tat java.base/java.lang.Thread.run(Thread.java:840)\nCaused by: com.amazonaws.services.s3.model.AmazonS3Exception: Forbidden (Service: Amazon S3; Status Code: 403; Error Code: 403 Forbidden; Request ID: 185212F9533E6B75; S3 Extended Request ID: dd9025bab4ad464b049177c95eb6ebf374d3b3fd1af9251148b658df7ac2e3e8; Proxy: null), S3 Extended Request ID: dd9025bab4ad464b049177c95eb6ebf374d3b3fd1af9251148b658df7ac2e3e8\n\tat com.amazonaws.http.AmazonHttpClient$RequestExecutor.handleErrorResponse(AmazonHttpClient.java:1879)\n\tat com.amazonaws.http.AmazonHttpClient$RequestExecutor.handleServiceErrorResponse(AmazonHttpClient.java:1418)\n\tat com.amazonaws.http.AmazonHttpClient$RequestExecutor.executeOneRequest(AmazonHttpClient.java:1387)\n\tat com.amazonaws.http.AmazonHttpClient$RequestExecutor.executeHelper(AmazonHttpClient.java:1157)\n\tat com.amazonaws.http.AmazonHttpClient$RequestExecutor.doExecute(AmazonHttpClient.java:814)\n\tat com.amazonaws.http.AmazonHttpClient$RequestExecutor.executeWithTimer(AmazonHttpClient.java:781)\n\tat com.amazonaws.http.AmazonHttpClient$RequestExecutor.execute(AmazonHttpClient.java:755)\n\tat com.amazonaws.http.AmazonHttpClient$RequestExecutor.access$500(AmazonHttpClient.java:715)\n\tat com.amazonaws.http.AmazonHttpClient$RequestExecutionBuilderImpl.execute(AmazonHttpClient.java:697)\n\tat com.amazonaws.http.AmazonHttpClient.execute(AmazonHttpClient.java:561)\n\tat com.amazonaws.http.AmazonHttpClient.execute(AmazonHttpClient.java:541)\n\tat com.amazonaws.services.s3.AmazonS3Client.invoke(AmazonS3Client.java:5520)\n\tat com.amazonaws.services.s3.AmazonS3Client.invoke(AmazonS3Client.java:5467)\n\tat com.amazonaws.services.s3.AmazonS3Client.getObjectMetadata(AmazonS3Client.java:1402)\n\tat org.apache.hadoop.fs.s3a.S3AFileSystem.lambda$getObjectMetadata$10(S3AFileSystem.java:2545)\n\tat org.apache.hadoop.fs.s3a.Invoker.retryUntranslated(Invoker.java:414)\n\tat org.apache.hadoop.fs.s3a.Invoker.retryUntranslated(Invoker.java:377)\n\tat org.apache.hadoop.fs.s3a.S3AFileSystem.getObjectMetadata(S3AFileSystem.java:2533)\n\tat org.apache.hadoop.fs.s3a.S3AFileSystem.getObjectMetadata(S3AFileSystem.java:2513)\n\tat org.apache.hadoop.fs.s3a.S3AFileSystem.s3GetFileStatus(S3AFileSystem.java:3776)\n\t... 139 more\n","logger":"unusual_prefix_0aab8e1abe4a8f324d874f9a30de87ad63865522_activefence"}
{"timestamp":"2025-07-14T09:07:47.287668","level":"error","event":"Task failed with exception","logger":"task","error_detail":[{"exc_type":"Py4JJavaError","exc_value":"An error occurred while calling o46.load.\n: java.nio.file.AccessDeniedException: s3a://activefence-bucket/bbc_tech/silver/_delta_log: getFileStatus on s3a://activefence-bucket/bbc_tech/silver/_delta_log: com.amazonaws.services.s3.model.AmazonS3Exception: Forbidden (Service: Amazon S3; Status Code: 403; Error Code: 403 Forbidden; Request ID: 185212F9533E6B75; S3 Extended Request ID: dd9025bab4ad464b049177c95eb6ebf374d3b3fd1af9251148b658df7ac2e3e8; Proxy: null), S3 Extended Request ID: dd9025bab4ad464b049177c95eb6ebf374d3b3fd1af9251148b658df7ac2e3e8:403 Forbidden\n\tat org.apache.hadoop.fs.s3a.S3AUtils.translateException(S3AUtils.java:255)\n\tat org.apache.hadoop.fs.s3a.S3AUtils.translateException(S3AUtils.java:175)\n\tat org.apache.hadoop.fs.s3a.S3AFileSystem.s3GetFileStatus(S3AFileSystem.java:3796)\n\tat org.apache.hadoop.fs.s3a.S3AFileSystem.innerGetFileStatus(S3AFileSystem.java:3688)\n\tat org.apache.hadoop.fs.s3a.S3AFileSystem.lambda$exists$34(S3AFileSystem.java:4703)\n\tat org.apache.hadoop.fs.statistics.impl.IOStatisticsBinding.lambda$trackDurationOfOperation$5(IOStatisticsBinding.java:499)\n\tat org.apache.hadoop.fs.statistics.impl.IOStatisticsBinding.trackDuration(IOStatisticsBinding.java:444)\n\tat org.apache.hadoop.fs.s3a.S3AFileSystem.trackDurationAndSpan(S3AFileSystem.java:2337)\n\tat org.apache.hadoop.fs.s3a.S3AFileSystem.trackDurationAndSpan(S3AFileSystem.java:2356)\n\tat org.apache.hadoop.fs.s3a.S3AFileSystem.exists(S3AFileSystem.java:4701)\n\tat io.delta.storage.S3SingleDriverLogStore.listFromInternal(S3SingleDriverLogStore.java:201)\n\tat io.delta.storage.S3SingleDriverLogStore.listFrom(S3SingleDriverLogStore.java:306)\n\tat org.apache.spark.sql.delta.storage.LogStoreAdaptor.listFrom(LogStore.scala:452)\n\tat org.apache.spark.sql.delta.storage.DelegatingLogStore.listFrom(DelegatingLogStore.scala:127)\n\tat org.apache.spark.sql.delta.Checkpoints.findLastCompleteCheckpointBefore(Checkpoints.scala:428)\n\tat org.apache.spark.sql.delta.Checkpoints.findLastCompleteCheckpointBefore$(Checkpoints.scala:416)\n\tat org.apache.spark.sql.delta.DeltaLog.findLastCompleteCheckpointBefore(DeltaLog.scala:72)\n\tat org.apache.spark.sql.delta.Checkpoints.$anonfun$loadMetadataFromFile$1(Checkpoints.scala:383)\n\tat org.apache.spark.sql.delta.metering.DeltaLogging.recordFrameProfile(DeltaLogging.scala:140)\n\tat org.apache.spark.sql.delta.metering.DeltaLogging.recordFrameProfile$(DeltaLogging.scala:138)\n\tat org.apache.spark.sql.delta.DeltaLog.recordFrameProfile(DeltaLog.scala:72)\n\tat org.apache.spark.sql.delta.metering.DeltaLogging.$anonfun$recordDeltaOperationInternal$1(DeltaLogging.scala:133)\n\tat com.databricks.spark.util.DatabricksLogging.recordOperation(DatabricksLogging.scala:128)\n\tat com.databricks.spark.util.DatabricksLogging.recordOperation$(DatabricksLogging.scala:117)\n\tat org.apache.spark.sql.delta.DeltaLog.recordOperation(DeltaLog.scala:72)\n\tat org.apache.spark.sql.delta.metering.DeltaLogging.recordDeltaOperationInternal(DeltaLogging.scala:132)\n\tat org.apache.spark.sql.delta.metering.DeltaLogging.recordDeltaOperation(DeltaLogging.scala:122)\n\tat org.apache.spark.sql.delta.metering.DeltaLogging.recordDeltaOperation$(DeltaLogging.scala:112)\n\tat org.apache.spark.sql.delta.DeltaLog.recordDeltaOperation(DeltaLog.scala:72)\n\tat org.apache.spark.sql.delta.Checkpoints.loadMetadataFromFile(Checkpoints.scala:360)\n\tat org.apache.spark.sql.delta.Checkpoints.$anonfun$loadMetadataFromFile$1(Checkpoints.scala:371)\n\tat org.apache.spark.sql.delta.metering.DeltaLogging.recordFrameProfile(DeltaLogging.scala:140)\n\tat org.apache.spark.sql.delta.metering.DeltaLogging.recordFrameProfile$(DeltaLogging.scala:138)\n\tat org.apache.spark.sql.delta.DeltaLog.recordFrameProfile(DeltaLog.scala:72)\n\tat org.apache.spark.sql.delta.metering.DeltaLogging.$anonfun$recordDeltaOperationInternal$1(DeltaLogging.scala:133)\n\tat com.databricks.spark.util.DatabricksLogging.recordOperation(DatabricksLogging.scala:128)\n\tat com.databricks.spark.util.DatabricksLogging.recordOperation$(DatabricksLogging.scala:117)\n\tat org.apache.spark.sql.delta.DeltaLog.recordOperation(DeltaLog.scala:72)\n\tat org.apache.spark.sql.delta.metering.DeltaLogging.recordDeltaOperationInternal(DeltaLogging.scala:132)\n\tat org.apache.spark.sql.delta.metering.DeltaLogging.recordDeltaOperation(DeltaLogging.scala:122)\n\tat org.apache.spark.sql.delta.metering.DeltaLogging.recordDeltaOperation$(DeltaLogging.scala:112)\n\tat org.apache.spark.sql.delta.DeltaLog.recordDeltaOperation(DeltaLog.scala:72)\n\tat org.apache.spark.sql.delta.Checkpoints.loadMetadataFromFile(Checkpoints.scala:360)\n\tat org.apache.spark.sql.delta.Checkpoints.$anonfun$loadMetadataFromFile$1(Checkpoints.scala:371)\n\tat org.apache.spark.sql.delta.metering.DeltaLogging.recordFrameProfile(DeltaLogging.scala:140)\n\tat org.apache.spark.sql.delta.metering.DeltaLogging.recordFrameProfile$(DeltaLogging.scala:138)\n\tat org.apache.spark.sql.delta.DeltaLog.recordFrameProfile(DeltaLog.scala:72)\n\tat org.apache.spark.sql.delta.metering.DeltaLogging.$anonfun$recordDeltaOperationInternal$1(DeltaLogging.scala:133)\n\tat com.databricks.spark.util.DatabricksLogging.recordOperation(DatabricksLogging.scala:128)\n\tat com.databricks.spark.util.DatabricksLogging.recordOperation$(DatabricksLogging.scala:117)\n\tat org.apache.spark.sql.delta.DeltaLog.recordOperation(DeltaLog.scala:72)\n\tat org.apache.spark.sql.delta.metering.DeltaLogging.recordDeltaOperationInternal(DeltaLogging.scala:132)\n\tat org.apache.spark.sql.delta.metering.DeltaLogging.recordDeltaOperation(DeltaLogging.scala:122)\n\tat org.apache.spark.sql.delta.metering.DeltaLogging.recordDeltaOperation$(DeltaLogging.scala:112)\n\tat org.apache.spark.sql.delta.DeltaLog.recordDeltaOperation(DeltaLog.scala:72)\n\tat org.apache.spark.sql.delta.Checkpoints.loadMetadataFromFile(Checkpoints.scala:360)\n\tat org.apache.spark.sql.delta.Checkpoints.$anonfun$loadMetadataFromFile$1(Checkpoints.scala:371)\n\tat org.apache.spark.sql.delta.metering.DeltaLogging.recordFrameProfile(DeltaLogging.scala:140)\n\tat org.apache.spark.sql.delta.metering.DeltaLogging.recordFrameProfile$(DeltaLogging.scala:138)\n\tat org.apache.spark.sql.delta.DeltaLog.recordFrameProfile(DeltaLog.scala:72)\n\tat org.apache.spark.sql.delta.metering.DeltaLogging.$anonfun$recordDeltaOperationInternal$1(DeltaLogging.scala:133)\n\tat com.databricks.spark.util.DatabricksLogging.recordOperation(DatabricksLogging.scala:128)\n\tat com.databricks.spark.util.DatabricksLogging.recordOperation$(DatabricksLogging.scala:117)\n\tat org.apache.spark.sql.delta.DeltaLog.recordOperation(DeltaLog.scala:72)\n\tat org.apache.spark.sql.delta.metering.DeltaLogging.recordDeltaOperationInternal(DeltaLogging.scala:132)\n\tat org.apache.spark.sql.delta.metering.DeltaLogging.recordDeltaOperation(DeltaLogging.scala:122)\n\tat org.apache.spark.sql.delta.metering.DeltaLogging.recordDeltaOperation$(DeltaLogging.scala:112)\n\tat org.apache.spark.sql.delta.DeltaLog.recordDeltaOperation(DeltaLog.scala:72)\n\tat org.apache.spark.sql.delta.Checkpoints.loadMetadataFromFile(Checkpoints.scala:360)\n\tat org.apache.spark.sql.delta.Checkpoints.readLastCheckpointFile(Checkpoints.scala:354)\n\tat org.apache.spark.sql.delta.Checkpoints.readLastCheckpointFile$(Checkpoints.scala:353)\n\tat org.apache.spark.sql.delta.DeltaLog.readLastCheckpointFile(DeltaLog.scala:72)\n\tat org.apache.spark.sql.delta.SnapshotManagement.$anonfun$getSnapshotAtInit$1(SnapshotManagement.scala:436)\n\tat org.apache.spark.sql.delta.metering.DeltaLogging.recordFrameProfile(DeltaLogging.scala:140)\n\tat org.apache.spark.sql.delta.metering.DeltaLogging.recordFrameProfile$(DeltaLogging.scala:138)\n\tat org.apache.spark.sql.delta.DeltaLog.recordFrameProfile(DeltaLog.scala:72)\n\tat org.apache.spark.sql.delta.SnapshotManagement.getSnapshotAtInit(SnapshotManagement.scala:434)\n\tat org.apache.spark.sql.delta.SnapshotManagement.getSnapshotAtInit$(SnapshotManagement.scala:433)\n\tat org.apache.spark.sql.delta.DeltaLog.getSnapshotAtInit(DeltaLog.scala:72)\n\tat org.apache.spark.sql.delta.SnapshotManagement.$init$(SnapshotManagement.scala:60)\n\tat org.apache.spark.sql.delta.DeltaLog.<init>(DeltaLog.scala:78)\n\tat org.apache.spark.sql.delta.DeltaLog$.$anonfun$apply$4(DeltaLog.scala:779)\n\tat org.apache.spark.sql.catalyst.plans.logical.AnalysisHelper$.allowInvokingTransformsInAnalyzer(AnalysisHelper.scala:323)\n\tat org.apache.spark.sql.delta.DeltaLog$.$anonfun$apply$3(DeltaLog.scala:774)\n\tat org.apache.spark.sql.delta.metering.DeltaLogging.recordFrameProfile(DeltaLogging.scala:140)\n\tat org.apache.spark.sql.delta.metering.DeltaLogging.recordFrameProfile$(DeltaLogging.scala:138)\n\tat org.apache.spark.sql.delta.DeltaLog$.recordFrameProfile(DeltaLog.scala:598)\n\tat org.apache.spark.sql.delta.metering.DeltaLogging.$anonfun$recordDeltaOperationInternal$1(DeltaLogging.scala:133)\n\tat com.databricks.spark.util.DatabricksLogging.recordOperation(DatabricksLogging.scala:128)\n\tat com.databricks.spark.util.DatabricksLogging.recordOperation$(DatabricksLogging.scala:117)\n\tat org.apache.spark.sql.delta.DeltaLog$.recordOperation(DeltaLog.scala:598)\n\tat org.apache.spark.sql.delta.metering.DeltaLogging.recordDeltaOperationInternal(DeltaLogging.scala:132)\n\tat org.apache.spark.sql.delta.metering.DeltaLogging.recordDeltaOperation(DeltaLogging.scala:122)\n\tat org.apache.spark.sql.delta.metering.DeltaLogging.recordDeltaOperation$(DeltaLogging.scala:112)\n\tat org.apache.spark.sql.delta.DeltaLog$.recordDeltaOperation(DeltaLog.scala:598)\n\tat org.apache.spark.sql.delta.DeltaLog$.createDeltaLog$1(DeltaLog.scala:773)\n\tat org.apache.spark.sql.delta.DeltaLog$.$anonfun$apply$5(DeltaLog.scala:791)\n\tat com.google.common.cache.LocalCache$LocalManualCache$1.load(LocalCache.java:4792)\n\tat com.google.common.cache.LocalCache$LoadingValueReference.loadFuture(LocalCache.java:3599)\n\tat com.google.common.cache.LocalCache$Segment.loadSync(LocalCache.java:2379)\n\tat com.google.common.cache.LocalCache$Segment.lockedGetOrLoad(LocalCache.java:2342)\n\tat com.google.common.cache.LocalCache$Segment.get(LocalCache.java:2257)\n\tat com.google.common.cache.LocalCache.get(LocalCache.java:4000)\n\tat com.google.common.cache.LocalCache$LocalManualCache.get(LocalCache.java:4789)\n\tat org.apache.spark.sql.delta.DeltaLog$.getDeltaLogFromCache$1(DeltaLog.scala:790)\n\tat org.apache.spark.sql.delta.DeltaLog$.apply(DeltaLog.scala:800)\n\tat org.apache.spark.sql.delta.DeltaLog$.forTable(DeltaLog.scala:677)\n\tat org.apache.spark.sql.delta.catalog.DeltaTableV2.$anonfun$deltaLog$1(DeltaTableV2.scala:91)\n\tat org.apache.spark.sql.delta.catalog.DeltaTableV2$.withEnrichedUnsupportedTableException(DeltaTableV2.scala:364)\n\tat org.apache.spark.sql.delta.catalog.DeltaTableV2.deltaLog$lzycompute(DeltaTableV2.scala:91)\n\tat org.apache.spark.sql.delta.catalog.DeltaTableV2.deltaLog(DeltaTableV2.scala:89)\n\tat org.apache.spark.sql.delta.catalog.DeltaTableV2.$anonfun$initialSnapshot$4(DeltaTableV2.scala:144)\n\tat scala.Option.getOrElse(Option.scala:189)\n\tat org.apache.spark.sql.delta.catalog.DeltaTableV2.$anonfun$initialSnapshot$1(DeltaTableV2.scala:144)\n\tat org.apache.spark.sql.delta.catalog.DeltaTableV2$.withEnrichedUnsupportedTableException(DeltaTableV2.scala:364)\n\tat org.apache.spark.sql.delta.catalog.DeltaTableV2.initialSnapshot$lzycompute(DeltaTableV2.scala:143)\n\tat org.apache.spark.sql.delta.catalog.DeltaTableV2.initialSnapshot(DeltaTableV2.scala:123)\n\tat org.apache.spark.sql.delta.catalog.DeltaTableV2.toBaseRelation$lzycompute(DeltaTableV2.scala:235)\n\tat org.apache.spark.sql.delta.catalog.DeltaTableV2.toBaseRelation(DeltaTableV2.scala:233)\n\tat org.apache.spark.sql.delta.sources.DeltaDataSource.$anonfun$createRelation$5(DeltaDataSource.scala:250)\n\tat org.apache.spark.sql.delta.metering.DeltaLogging.recordFrameProfile(DeltaLogging.scala:140)\n\tat org.apache.spark.sql.delta.metering.DeltaLogging.recordFrameProfile$(DeltaLogging.scala:138)\n\tat org.apache.spark.sql.delta.sources.DeltaDataSource.recordFrameProfile(DeltaDataSource.scala:49)\n\tat org.apache.spark.sql.delta.sources.DeltaDataSource.createRelation(DeltaDataSource.scala:209)\n\tat org.apache.spark.sql.execution.datasources.DataSource.resolveRelation(DataSource.scala:346)\n\tat org.apache.spark.sql.DataFrameReader.loadV1Source(DataFrameReader.scala:229)\n\tat org.apache.spark.sql.DataFrameReader.$anonfun$load$2(DataFrameReader.scala:211)\n\tat scala.Option.getOrElse(Option.scala:189)\n\tat org.apache.spark.sql.DataFrameReader.load(DataFrameReader.scala:211)\n\tat org.apache.spark.sql.DataFrameReader.load(DataFrameReader.scala:186)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\n\tat py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\n\tat py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\n\tat py4j.Gateway.invoke(Gateway.java:282)\n\tat py4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\n\tat py4j.commands.CallCommand.execute(CallCommand.java:79)\n\tat py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\n\tat py4j.ClientServerConnection.run(ClientServerConnection.java:106)\n\tat java.base/java.lang.Thread.run(Thread.java:840)\nCaused by: com.amazonaws.services.s3.model.AmazonS3Exception: Forbidden (Service: Amazon S3; Status Code: 403; Error Code: 403 Forbidden; Request ID: 185212F9533E6B75; S3 Extended Request ID: dd9025bab4ad464b049177c95eb6ebf374d3b3fd1af9251148b658df7ac2e3e8; Proxy: null), S3 Extended Request ID: dd9025bab4ad464b049177c95eb6ebf374d3b3fd1af9251148b658df7ac2e3e8\n\tat com.amazonaws.http.AmazonHttpClient$RequestExecutor.handleErrorResponse(AmazonHttpClient.java:1879)\n\tat com.amazonaws.http.AmazonHttpClient$RequestExecutor.handleServiceErrorResponse(AmazonHttpClient.java:1418)\n\tat com.amazonaws.http.AmazonHttpClient$RequestExecutor.executeOneRequest(AmazonHttpClient.java:1387)\n\tat com.amazonaws.http.AmazonHttpClient$RequestExecutor.executeHelper(AmazonHttpClient.java:1157)\n\tat com.amazonaws.http.AmazonHttpClient$RequestExecutor.doExecute(AmazonHttpClient.java:814)\n\tat com.amazonaws.http.AmazonHttpClient$RequestExecutor.executeWithTimer(AmazonHttpClient.java:781)\n\tat com.amazonaws.http.AmazonHttpClient$RequestExecutor.execute(AmazonHttpClient.java:755)\n\tat com.amazonaws.http.AmazonHttpClient$RequestExecutor.access$500(AmazonHttpClient.java:715)\n\tat com.amazonaws.http.AmazonHttpClient$RequestExecutionBuilderImpl.execute(AmazonHttpClient.java:697)\n\tat com.amazonaws.http.AmazonHttpClient.execute(AmazonHttpClient.java:561)\n\tat com.amazonaws.http.AmazonHttpClient.execute(AmazonHttpClient.java:541)\n\tat com.amazonaws.services.s3.AmazonS3Client.invoke(AmazonS3Client.java:5520)\n\tat com.amazonaws.services.s3.AmazonS3Client.invoke(AmazonS3Client.java:5467)\n\tat com.amazonaws.services.s3.AmazonS3Client.getObjectMetadata(AmazonS3Client.java:1402)\n\tat org.apache.hadoop.fs.s3a.S3AFileSystem.lambda$getObjectMetadata$10(S3AFileSystem.java:2545)\n\tat org.apache.hadoop.fs.s3a.Invoker.retryUntranslated(Invoker.java:414)\n\tat org.apache.hadoop.fs.s3a.Invoker.retryUntranslated(Invoker.java:377)\n\tat org.apache.hadoop.fs.s3a.S3AFileSystem.getObjectMetadata(S3AFileSystem.java:2533)\n\tat org.apache.hadoop.fs.s3a.S3AFileSystem.getObjectMetadata(S3AFileSystem.java:2513)\n\tat org.apache.hadoop.fs.s3a.S3AFileSystem.s3GetFileStatus(S3AFileSystem.java:3776)\n\t... 139 more\n","exc_notes":[],"syntax_error":null,"is_cause":false,"frames":[{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/sdk/execution_time/task_runner.py","lineno":867,"name":"run"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/sdk/execution_time/task_runner.py","lineno":1159,"name":"_execute_task"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/sdk/bases/operator.py","lineno":397,"name":"wrapper"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/providers/standard/operators/python.py","lineno":216,"name":"execute"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/providers/standard/operators/python.py","lineno":239,"name":"execute_callable"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/sdk/execution_time/callback_runner.py","lineno":81,"name":"run"},{"filename":"/opt/airflow/dags/activefence.py","lineno":274,"name":"embed_gold_data"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/pyspark/sql/readwriter.py","lineno":307,"name":"load"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/py4j/java_gateway.py","lineno":1322,"name":"__call__"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/pyspark/errors/exceptions/captured.py","lineno":179,"name":"deco"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/py4j/protocol.py","lineno":326,"name":"get_return_value"}],"is_group":false,"exceptions":[]}]}
{"timestamp":"2025-07-14T09:07:47.514154Z","level":"error","event":"25/07/14 09:07:47 ERROR TransportRequestHandler: Error sending result StreamResponse[streamId=/jars/com.amazonaws_aws-java-sdk-bundle-1.12.520.jar,byteCount=338132673,body=FileSegmentManagedBuffer[file=/home/airflow/.ivy2/jars/com.amazonaws_aws-java-sdk-bundle-1.12.520.jar,offset=0,length=338132673]] to /172.20.0.8:34704; closing connection","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:47.514956Z","level":"error","event":"io.netty.channel.StacklessClosedChannelException","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:07:47.515336Z","level":"error","event":"\tat io.netty.channel.AbstractChannel.close(ChannelPromise)(Unknown Source)","chan":"stderr","logger":"task"}
