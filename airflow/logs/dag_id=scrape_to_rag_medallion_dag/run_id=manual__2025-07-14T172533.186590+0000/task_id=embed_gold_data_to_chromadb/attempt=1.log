{"timestamp":"2025-07-14T17:25:33.641366","level":"info","event":"DAG bundles loaded: dags-folder","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-07-14T17:25:33.642782","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/activefence.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-07-14T17:25:42.020068Z","level":"error","event":"/home/airflow/.local/lib/python3.12/site-packages/pyspark/bin/load-spark-env.sh: line 68: ps: command not found","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T17:25:44.316049Z","level":"info","event":":: loading settings :: url = jar:file:/home/airflow/.local/lib/python3.12/site-packages/pyspark/jars/ivy-2.5.1.jar!/org/apache/ivy/core/settings/ivysettings.xml","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T17:25:44.438161Z","level":"error","event":"Ivy Default Cache set to: /home/airflow/.ivy2/cache","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T17:25:44.438601Z","level":"error","event":"The jars for the packages stored in: /home/airflow/.ivy2/jars","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T17:25:44.442184Z","level":"error","event":"org.apache.hadoop#hadoop-aws added as a dependency","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T17:25:44.443194Z","level":"error","event":"com.amazonaws#aws-java-sdk-bundle added as a dependency","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T17:25:44.443980Z","level":"error","event":"org.apache.spark#spark-avro_2.12 added as a dependency","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T17:25:44.444421Z","level":"error","event":"io.delta#delta-spark_2.12 added as a dependency","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T17:25:44.444998Z","level":"error","event":":: resolving dependencies :: org.apache.spark#spark-submit-parent-1a9df1f5-5200-4367-a44c-1a028bfadfcf;1.0","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T17:25:44.445505Z","level":"error","event":"\tconfs: [default]","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T17:25:44.630193Z","level":"error","event":"\tfound org.apache.hadoop#hadoop-aws;3.3.4 in central","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T17:25:44.667095Z","level":"error","event":"\tfound org.wildfly.openssl#wildfly-openssl;1.0.7.Final in central","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T17:25:44.684934Z","level":"error","event":"\tfound com.amazonaws#aws-java-sdk-bundle;1.12.520 in central","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T17:25:44.730167Z","level":"error","event":"\tfound org.apache.spark#spark-avro_2.12;3.5.0 in central","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T17:25:44.757720Z","level":"error","event":"\tfound org.tukaani#xz;1.9 in central","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T17:25:44.777769Z","level":"error","event":"\tfound io.delta#delta-spark_2.12;3.1.0 in central","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T17:25:44.800404Z","level":"error","event":"\tfound io.delta#delta-storage;3.1.0 in central","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T17:25:44.817924Z","level":"error","event":"\tfound org.antlr#antlr4-runtime;4.9.3 in central","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T17:25:44.848112Z","level":"error","event":":: resolution report :: resolve 390ms :: artifacts dl 14ms","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T17:25:44.848824Z","level":"error","event":"\t:: modules in use:","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T17:25:44.849335Z","level":"error","event":"\tcom.amazonaws#aws-java-sdk-bundle;1.12.520 from central in [default]","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T17:25:44.849880Z","level":"error","event":"\tio.delta#delta-spark_2.12;3.1.0 from central in [default]","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T17:25:44.850273Z","level":"error","event":"\tio.delta#delta-storage;3.1.0 from central in [default]","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T17:25:44.850696Z","level":"error","event":"\torg.antlr#antlr4-runtime;4.9.3 from central in [default]","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T17:25:44.851008Z","level":"error","event":"\torg.apache.hadoop#hadoop-aws;3.3.4 from central in [default]","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T17:25:44.851273Z","level":"error","event":"\torg.apache.spark#spark-avro_2.12;3.5.0 from central in [default]","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T17:25:44.851490Z","level":"error","event":"\torg.tukaani#xz;1.9 from central in [default]","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T17:25:44.851760Z","level":"error","event":"\torg.wildfly.openssl#wildfly-openssl;1.0.7.Final from central in [default]","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T17:25:44.852028Z","level":"error","event":"\t:: evicted modules:","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T17:25:44.852389Z","level":"error","event":"\tcom.amazonaws#aws-java-sdk-bundle;1.12.262 by [com.amazonaws#aws-java-sdk-bundle;1.12.520] in [default]","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T17:25:44.852697Z","level":"error","event":"\t---------------------------------------------------------------------","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T17:25:44.853031Z","level":"error","event":"\t|                  |            modules            ||   artifacts   |","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T17:25:44.853453Z","level":"error","event":"\t|       conf       | number| search|dwnlded|evicted|| number|dwnlded|","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T17:25:44.853858Z","level":"error","event":"\t---------------------------------------------------------------------","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T17:25:44.854169Z","level":"error","event":"\t|      default     |   9   |   0   |   0   |   1   ||   8   |   0   |","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T17:25:44.854395Z","level":"error","event":"\t---------------------------------------------------------------------","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T17:25:44.855522Z","level":"error","event":":: retrieving :: org.apache.spark#spark-submit-parent-1a9df1f5-5200-4367-a44c-1a028bfadfcf","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T17:25:44.855841Z","level":"error","event":"\tconfs: [default]","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T17:25:44.867208Z","level":"error","event":"\t0 artifacts copied, 8 already retrieved (0kB/11ms)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T17:25:45.148629Z","level":"error","event":"25/07/14 17:25:45 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T17:25:45.408717Z","level":"error","event":"Setting default log level to \"WARN\".","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T17:25:45.409418Z","level":"error","event":"To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T17:25:48.934264","level":"info","event":"Anonymized telemetry enabled. See                     https://docs.trychroma.com/telemetry for more information.","logger":"chromadb.telemetry.product.posthog"}
{"timestamp":"2025-07-14T17:25:50.658080Z","level":"error","event":"25/07/14 17:25:50 WARN MetricsConfig: Cannot locate configuration: tried hadoop-metrics2-s3a-file-system.properties,hadoop-metrics2.properties","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T17:26:00.310334Z","level":"error","event":"\r[Stage 0:>                                                          (0 + 1) / 1]\r\r                                                                                \r25/07/14 17:26:00 WARN SparkStringUtils: Truncated the string representation of a plan since it was too large. This behavior can be adjusted by setting 'spark.sql.debug.maxToStringFields'.","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T17:26:14.257969","level":"info","event":"Embedded 55 records","logger":"unusual_prefix_0aab8e1abe4a8f324d874f9a30de87ad63865522_activefence"}
{"timestamp":"2025-07-14T17:26:14.259066","level":"info","event":"Done. Returned value was: None","logger":"airflow.task.operators.airflow.providers.standard.operators.python.PythonOperator"}
{"timestamp":"2025-07-14T17:26:14.897151Z","level":"error","event":"\r[Stage 1:>                                                          (0 + 1) / 1]\r\r[Stage 3:>                                                         (0 + 2) / 50]\r\r[Stage 3:==>                                                       (2 + 2) / 50]\r\r[Stage 3:=====>                                                    (5 + 2) / 50]\r\r[Stage 3:=========>                                                (8 + 2) / 50]\r\r[Stage 3:=============>                                           (12 + 2) / 50]\r\r[Stage 3:=================>                                       (15 + 2) / 50]\r\r[Stage 3:====================>                                    (18 + 2) / 50]\r\r[Stage 3:======================>                                  (20 + 2) / 50]\r\r[Stage 3:===========================>                             (24 + 2) / 50]\r\r[Stage 3:===============================>                         (28 + 2) / 50]\r\r[Stage 3:====================================>                    (32 + 2) / 50]\r\r[Stage 3:=======================================>                 (35 + 2) / 50]\r\r[Stage 3:===========================================>             (38 + 2) / 50]\r\r[Stage 3:===============================================>         (42 + 2) / 50]\r\r[Stage 3:====================================================>    (46 + 2) / 50]\r\r                                                                                \r\r[Stage 5:>                                                         (0 + 2) / 50]\r\r[Stage 5:==>                                                       (2 + 2) / 50]\r\r[Stage 5:=========>                                                (8 + 2) / 50]\r\r[Stage 5:=================>                                       (15 + 2) / 50]\r\r[Stage 5:=====================>                                   (19 + 2) / 50]\r\r[Stage 5:==============================>                          (27 + 2) / 50]\r\r[Stage 5:==========================================>              (37 + 2) / 50]\r\r[Stage 5:======================================================>  (48 + 2) / 50]\r\r                                                                                \r\r[Stage 9:>                                                          (0 + 1) / 1]","chan":"stderr","logger":"task"}
