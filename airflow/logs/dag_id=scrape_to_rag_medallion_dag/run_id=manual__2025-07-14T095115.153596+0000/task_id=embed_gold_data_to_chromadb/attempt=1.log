{"timestamp":"2025-07-14T09:51:17.316589","level":"info","event":"DAG bundles loaded: dags-folder","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-07-14T09:51:17.319115","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/activefence.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-07-14T09:51:26.827221Z","level":"error","event":"/home/airflow/.local/lib/python3.12/site-packages/pyspark/bin/load-spark-env.sh: line 68: ps: command not found","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:51:29.155311Z","level":"info","event":":: loading settings :: url = jar:file:/home/airflow/.local/lib/python3.12/site-packages/pyspark/jars/ivy-2.5.1.jar!/org/apache/ivy/core/settings/ivysettings.xml","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T09:51:29.256145Z","level":"error","event":"Ivy Default Cache set to: /home/airflow/.ivy2/cache","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:51:29.256931Z","level":"error","event":"The jars for the packages stored in: /home/airflow/.ivy2/jars","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:51:29.259815Z","level":"error","event":"org.apache.hadoop#hadoop-aws added as a dependency","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:51:29.260206Z","level":"error","event":"com.amazonaws#aws-java-sdk-bundle added as a dependency","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:51:29.260572Z","level":"error","event":"org.apache.spark#spark-avro_2.12 added as a dependency","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:51:29.260972Z","level":"error","event":"io.delta#delta-spark_2.12 added as a dependency","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:51:29.261525Z","level":"error","event":":: resolving dependencies :: org.apache.spark#spark-submit-parent-5d3284e4-3059-4739-a149-3e0cb4de3317;1.0","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:51:29.261998Z","level":"error","event":"\tconfs: [default]","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:51:29.463520Z","level":"error","event":"\tfound org.apache.hadoop#hadoop-aws;3.3.4 in central","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:51:29.498683Z","level":"error","event":"\tfound org.wildfly.openssl#wildfly-openssl;1.0.7.Final in central","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:51:29.516102Z","level":"error","event":"\tfound com.amazonaws#aws-java-sdk-bundle;1.12.520 in central","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:51:29.553186Z","level":"error","event":"\tfound org.apache.spark#spark-avro_2.12;3.5.0 in central","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:51:29.571039Z","level":"error","event":"\tfound org.tukaani#xz;1.9 in central","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:51:29.592149Z","level":"error","event":"\tfound io.delta#delta-spark_2.12;3.1.0 in central","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:51:29.611886Z","level":"error","event":"\tfound io.delta#delta-storage;3.1.0 in central","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:51:29.625772Z","level":"error","event":"\tfound org.antlr#antlr4-runtime;4.9.3 in central","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:51:29.654607Z","level":"error","event":":: resolution report :: resolve 380ms :: artifacts dl 14ms","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:51:29.655236Z","level":"error","event":"\t:: modules in use:","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:51:29.655582Z","level":"error","event":"\tcom.amazonaws#aws-java-sdk-bundle;1.12.520 from central in [default]","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:51:29.655834Z","level":"error","event":"\tio.delta#delta-spark_2.12;3.1.0 from central in [default]","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:51:29.656132Z","level":"error","event":"\tio.delta#delta-storage;3.1.0 from central in [default]","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:51:29.656656Z","level":"error","event":"\torg.antlr#antlr4-runtime;4.9.3 from central in [default]","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:51:29.656958Z","level":"error","event":"\torg.apache.hadoop#hadoop-aws;3.3.4 from central in [default]","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:51:29.657324Z","level":"error","event":"\torg.apache.spark#spark-avro_2.12;3.5.0 from central in [default]","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:51:29.657668Z","level":"error","event":"\torg.tukaani#xz;1.9 from central in [default]","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:51:29.658129Z","level":"error","event":"\torg.wildfly.openssl#wildfly-openssl;1.0.7.Final from central in [default]","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:51:29.658495Z","level":"error","event":"\t:: evicted modules:","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:51:29.659583Z","level":"error","event":"\tcom.amazonaws#aws-java-sdk-bundle;1.12.262 by [com.amazonaws#aws-java-sdk-bundle;1.12.520] in [default]","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:51:29.660091Z","level":"error","event":"\t---------------------------------------------------------------------","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:51:29.660518Z","level":"error","event":"\t|                  |            modules            ||   artifacts   |","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:51:29.660909Z","level":"error","event":"\t|       conf       | number| search|dwnlded|evicted|| number|dwnlded|","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:51:29.661444Z","level":"error","event":"\t---------------------------------------------------------------------","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:51:29.661852Z","level":"error","event":"\t|      default     |   9   |   0   |   0   |   1   ||   8   |   0   |","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:51:29.662151Z","level":"error","event":"\t---------------------------------------------------------------------","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:51:29.662722Z","level":"error","event":":: retrieving :: org.apache.spark#spark-submit-parent-5d3284e4-3059-4739-a149-3e0cb4de3317","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:51:29.663160Z","level":"error","event":"\tconfs: [default]","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:51:29.671595Z","level":"error","event":"\t0 artifacts copied, 8 already retrieved (0kB/9ms)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:51:29.922960Z","level":"error","event":"25/07/14 09:51:29 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:51:30.152278Z","level":"error","event":"Setting default log level to \"WARN\".","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:51:30.152912Z","level":"error","event":"To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:51:35.438781","level":"info","event":"Anonymized telemetry enabled. See                     https://docs.trychroma.com/telemetry for more information.","logger":"chromadb.telemetry.product.posthog"}
{"timestamp":"2025-07-14T09:51:38.334343Z","level":"error","event":"25/07/14 09:51:38 WARN MetricsConfig: Cannot locate configuration: tried hadoop-metrics2-s3a-file-system.properties,hadoop-metrics2.properties","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:51:50.562754Z","level":"info","event":"root","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T09:51:50.563636Z","level":"info","event":" |-- article_id: string (nullable = true)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T09:51:50.564303Z","level":"info","event":" |-- title: string (nullable = true)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T09:51:50.564771Z","level":"info","event":" |-- pub_date: date (nullable = true)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T09:51:50.565054Z","level":"info","event":" |-- summary: string (nullable = true)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T09:51:50.565300Z","level":"info","event":" |-- load_timestamp: timestamp_ntz (nullable = true)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T09:51:50.565490Z","level":"info","event":" |-- year_month: string (nullable = true)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T09:51:50.565781Z","level":"info","event":"","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-14T09:51:51.601293Z","level":"error","event":"\r[Stage 0:>                                                          (0 + 0) / 2]\r\r[Stage 0:>                                                          (0 + 2) / 2]\r\r                                                                                \r25/07/14 09:51:51 WARN SparkStringUtils: Truncated the string representation of a plan since it was too large. This behavior can be adjusted by setting 'spark.sql.debug.maxToStringFields'.","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-14T09:52:02.709731","level":"error","event":"Error processing Delta table: HTTPConnectionPool(host='localhost', port=11434): Max retries exceeded with url: /api/embeddings (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x7f2a14c9f0b0>: Failed to establish a new connection: [Errno 111] Connection refused'))","logger":"unusual_prefix_0aab8e1abe4a8f324d874f9a30de87ad63865522_activefence"}
{"timestamp":"2025-07-14T09:52:02.710123","level":"error","event":"Task failed with exception","logger":"task","error_detail":[{"exc_type":"ConnectionError","exc_value":"HTTPConnectionPool(host='localhost', port=11434): Max retries exceeded with url: /api/embeddings (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x7f2a14c9f0b0>: Failed to establish a new connection: [Errno 111] Connection refused'))","exc_notes":[],"syntax_error":null,"is_cause":false,"frames":[{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/sdk/execution_time/task_runner.py","lineno":867,"name":"run"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/sdk/execution_time/task_runner.py","lineno":1159,"name":"_execute_task"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/sdk/bases/operator.py","lineno":397,"name":"wrapper"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/providers/standard/operators/python.py","lineno":216,"name":"execute"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/providers/standard/operators/python.py","lineno":239,"name":"execute_callable"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/sdk/execution_time/callback_runner.py","lineno":81,"name":"run"},{"filename":"/opt/airflow/dags/activefence.py","lineno":302,"name":"embed_gold_data"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/requests/api.py","lineno":115,"name":"post"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/requests/api.py","lineno":59,"name":"request"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/requests/sessions.py","lineno":589,"name":"request"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/requests/sessions.py","lineno":703,"name":"send"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/requests/adapters.py","lineno":700,"name":"send"}],"is_group":false,"exceptions":[]},{"exc_type":"MaxRetryError","exc_value":"HTTPConnectionPool(host='localhost', port=11434): Max retries exceeded with url: /api/embeddings (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x7f2a14c9f0b0>: Failed to establish a new connection: [Errno 111] Connection refused'))","exc_notes":[],"syntax_error":null,"is_cause":false,"frames":[{"filename":"/home/airflow/.local/lib/python3.12/site-packages/requests/adapters.py","lineno":667,"name":"send"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/urllib3/connectionpool.py","lineno":841,"name":"urlopen"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/urllib3/util/retry.py","lineno":519,"name":"increment"}],"is_group":false,"exceptions":[]},{"exc_type":"NewConnectionError","exc_value":"<urllib3.connection.HTTPConnection object at 0x7f2a14c9f0b0>: Failed to establish a new connection: [Errno 111] Connection refused","exc_notes":[],"syntax_error":null,"is_cause":true,"frames":[{"filename":"/home/airflow/.local/lib/python3.12/site-packages/urllib3/connectionpool.py","lineno":787,"name":"urlopen"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/urllib3/connectionpool.py","lineno":493,"name":"_make_request"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/urllib3/connection.py","lineno":445,"name":"request"},{"filename":"/usr/local/lib/python3.12/http/client.py","lineno":1333,"name":"endheaders"},{"filename":"/usr/local/lib/python3.12/http/client.py","lineno":1093,"name":"_send_output"},{"filename":"/usr/local/lib/python3.12/http/client.py","lineno":1037,"name":"send"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/urllib3/connection.py","lineno":276,"name":"connect"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/urllib3/connection.py","lineno":213,"name":"_new_conn"}],"is_group":false,"exceptions":[]},{"exc_type":"ConnectionRefusedError","exc_value":"[Errno 111] Connection refused","exc_notes":[],"syntax_error":null,"is_cause":true,"frames":[{"filename":"/home/airflow/.local/lib/python3.12/site-packages/urllib3/connection.py","lineno":198,"name":"_new_conn"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/urllib3/util/connection.py","lineno":85,"name":"create_connection"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/urllib3/util/connection.py","lineno":73,"name":"create_connection"}],"is_group":false,"exceptions":[]}]}
{"timestamp":"2025-07-14T09:52:03.689277Z","level":"error","event":"\r[Stage 1:>                                                          (0 + 2) / 2]\r\r[Stage 3:>                                                         (0 + 2) / 50]\r\r[Stage 3:==>                                                       (2 + 2) / 50]\r\r[Stage 3:===>                                                      (3 + 2) / 50]\r\r[Stage 3:====>                                                     (4 + 2) / 50]\r\r[Stage 3:======>                                                   (6 + 2) / 50]\r\r[Stage 3:=========>                                                (8 + 2) / 50]\r\r[Stage 3:=============>                                           (12 + 2) / 50]\r\r[Stage 3:==================>                                      (16 + 2) / 50]\r\r[Stage 3:=====================>                                   (19 + 2) / 50]\r\r[Stage 3:===========================>                             (24 + 2) / 50]\r\r[Stage 3:=============================>                           (26 + 2) / 50]\r\r[Stage 3:==================================>                      (30 + 2) / 50]\r\r[Stage 3:======================================>                  (34 + 3) / 50]\r\r[Stage 3:===========================================>             (38 + 2) / 50]\r\r[Stage 3:=================================================>       (43 + 2) / 50]\r\r[Stage 3:======================================================>  (48 + 2) / 50]\r\r                                                                                \r\r[Stage 8:=======================================>                 (35 + 2) / 50]\r\r                                                                                \r\r[Stage 9:>                                                          (0 + 2) / 2]","chan":"stderr","logger":"task"}
